{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/common/enums/Filters.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/users/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/forms/CommonTextInput.tsx","features/users/forms/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/forms/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/forms/CommonTextArea.tsx","app/common/forms/DropdownInput.tsx","app/common/enums/categories.ts","app/common/forms/DateInput.tsx","features/activities/forms/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/users/profiles/ActivityCard.tsx","features/users/profiles/ProfileActivities.tsx","features/users/forms/ProfileEditForm.tsx","features/users/profiles/ProfileDetails.tsx","features/users/profiles/ProfileFollowings.tsx","app/common/uploads/PhotoWidgetCropper.tsx","app/common/uploads/PhotoWidgetDropzone.tsx","app/common/uploads/PhotoUploadWidget.tsx","features/users/profiles/ProfilePhotos.tsx","features/users/profiles/ProfileContent.tsx","features/users/profiles/FollowButton.tsx","features/users/profiles/ProfileHeader.tsx","features/users/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/utils/hooks.ts","features/users/RegisterSuccess.tsx","features/users/ConfirmEmail.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","Filters","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","fbLogin","accessToken","register","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","getProfile","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowings","updateProfile","profile","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","city","description","date","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","all","setPredicate","value","resetPredicate","forEach","startDate","isGoing","isHost","console","loadActivities","setLoadingInitial","axiosParams","result","setActivity","setPagination","log","setPagingParams","loadActivity","getActivity","runInAction","attendees","some","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","u","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","URLSearchParams","toString","toISOString","ProfileStore","loadingProfile","loadingPhoto","loadingFollowings","loadingActivities","uploading","followings","activeTab","setActiveTab","tab","loadProfile","photo","photos","isMain","setImage","p","updateFollowing","shouldFollow","activityStore","followingsCount","loadFollowings","setDisplayName","UserStore","fbAccessToken","fbLoading","refeshTokenTimeout","TOKEN_REFRESH_SECONDS","creds","setToken","StartRefreshTokenTimer","modalStore","closeModal","getFacebookLoginStatus","window","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","localStorage","removeItem","StopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","e","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","isLoggedIn","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","ProfileCard","bio","Card","Content","Description","length","substring","extra","Icon","iconStyleFollowing","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","ActivityListItem","Segment","Group","Label","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","CommonTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","textAlign","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","yup","required","isValid","dirty","Divider","LoadingComponent","Dimmer","CommonTextArea","rows","DropdownInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categories","DateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","preventDefault","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","ActivityCard","objectFit","Meta","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","setEditMode","isCurrentUser","editProfileMode","setEditProfileMode","PhotoWidgetCropper","setCropper","preview","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dropzoneStyle","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","disable","addPhotoMode","setAddPhotoMode","target","setTarget","animated","event","currentTarget","handleSetMainPhoto","visible","hidden","handleDeletePhoto","ProfileDetails","menuPosition","Reveal","handleFollow","Statistic","PrivateRoute","Component","component","rest","useQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","setStatus","handleConfirmEmailResend","getBody","location","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ProfilePage","ActivityForm","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.61478118.chunk.js","sourcesContent":["export interface Pagination {\r\n\tcurrentPage: number;\r\n\titemsPerPage: number;\r\n\ttotalItems: number;\r\n\ttotalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n\tdata: T;\r\n\tpagination: Pagination;\r\n\r\n\tconstructor(data: T, pagination: Pagination) {\r\n\t\tthis.data = data;\r\n\t\tthis.pagination = pagination;\r\n\t}\r\n}\r\n\r\nexport class PagingParams {\r\n\tpageNumber;\r\n\tpageSize;\r\n\r\n\tconstructor(pageNumber = 1, pageSize = 2) {\r\n\t\tthis.pageNumber = pageNumber;\r\n\t\tthis.pageSize = pageSize;\r\n\t}\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/Activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n\treturn new Promise((resolve) => {\r\n\t\tsetTimeout(resolve, delay);\r\n\t});\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n\tconst token = store.commonStore.token;\r\n\tif (token) {\r\n\t\tconfig.headers!.Authorization = `Bearer ${token}`;\r\n\t}\r\n\treturn config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n\tasync (response) => {\r\n\t\tif (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n\r\n\t\tconst pagination = response.headers[\"pagination\"];\r\n\t\tif (pagination) {\r\n\t\t\tresponse.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n\t\t\treturn response as AxiosResponse<PaginatedResult<any>>;\r\n\t\t} else {\r\n\t\t\treturn response;\r\n\t\t}\r\n\t},\r\n\t(error: AxiosError) => {\r\n\t\tconst { data, status, headers, config } = error.response!;\r\n\r\n\t\tswitch (status) {\r\n\t\t\tcase 400:\r\n\t\t\t\tif (typeof data === \"string\") {\r\n\t\t\t\t\ttoast.error(data);\r\n\t\t\t\t}\r\n\t\t\t\t// handle case - bad guid\r\n\t\t\t\tif (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n\t\t\t\t\thistory.push(\"/not-found\");\r\n\r\n\t\t\t\t\t// handle validation cases by collecting all thrown validation errors and return then in an array\r\n\t\t\t\t} else if (data.errors) {\r\n\t\t\t\t\tconst modalStateErrors = [];\r\n\r\n\t\t\t\t\tfor (const key in data.errors) {\r\n\t\t\t\t\t\tif (data.errors[key]) {\r\n\t\t\t\t\t\t\tmodalStateErrors.push(data.errors[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow modalStateErrors.flat();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 401:\r\n\t\t\t\tif (status === 401 && headers[\"www-authenticate\"]?.startsWith('Bearer error=\"invalid_token\"')) {\r\n\t\t\t\t\tstore.userStore.logout();\r\n\t\t\t\t\ttoast.error(\"Session expired. Please, log in again.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 404:\r\n\t\t\t\thistory.push(\"/not-found\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 500:\r\n\t\t\t\tstore.commonStore.setServerError(data);\r\n\t\t\t\thistory.push(\"/server-error\");\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n\tget: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n\tpost: <T>(url: string, body: Object) => axios.post<T>(url, body).then(responseBody),\r\n\tput: <T>(url: string, body: Object) => axios.put<T>(url, body).then(responseBody),\r\n\tdel: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n\tlist: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>(\"/activities\", { params }).then(responseBody),\r\n\tdetails: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n\tcreate: (activity: ActivityFormValues) => requests.post<void>(\"/activities/\", activity),\r\n\tupdate: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n\tdelete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n\tattend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n\tcurrent: () => requests.get<User>(\"/account\"),\r\n\tlogin: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n\tfbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n\tregister: (user: UserFormValues) => requests.post<User>(\"/account/register\", user),\r\n\trefreshToken: () => requests.post<User>(\"/account/refreshToken\", {}),\r\n\tverifyEmail: (token: string, email: string) => requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`, {}),\r\n\tresendEmailConfirm: (email: string) => requests.get(`/account/resendEmailConfirmationLink?email=${email}`),\r\n};\r\n\r\nconst Profiles = {\r\n\tgetProfile: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n\tuploadPhoto: (file: Blob) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"File\", file);\r\n\t\treturn axios.post<Photo>(\"photos\", formData, {\r\n\t\t\theaders: { \"Content-type\": \"multipart/form-data\" },\r\n\t\t});\r\n\t},\r\n\tsetMainPhoto: (id: string) => {\r\n\t\trequests.post(`/photos/${id}/setMain`, {});\r\n\t},\r\n\tdeletePhoto: (id: string) => {\r\n\t\trequests.del(`/photos/${id}`);\r\n\t},\r\n\tupdateFollowings: (username: string) => {\r\n\t\trequests.post(`/follow/${username}`, {});\r\n\t},\r\n\tupdateProfile: (profile: Partial<Profile>) => {\r\n\t\trequests.put(`/profiles`, profile);\r\n\t},\r\n\tlistFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n\tlistActivities: (username: string, predicate: string) => requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\r\n};\r\n\r\nconst agent = { Activities, Account, Profiles };\r\n\r\nexport default agent;\r\n","export enum Filters {\r\n\tisHost = \"isHost\",\r\n\tisGoing = \"isGoing\",\r\n\tall = \"all\",\r\n\tstartDate = \"startDate\",\r\n}\r\n","import { Profile } from \"./Profile\";\r\n\r\nexport interface Activity {\r\n\tid: string;\r\n\ttitle: string;\r\n\tdate: Date | null;\r\n\tdescription: string;\r\n\tcategory: string;\r\n\tcity: string;\r\n\tvenue: string;\r\n\thostUsername: string;\r\n\tisCancelled: boolean;\r\n\tisGoing: boolean;\r\n\tisHost: boolean;\r\n\thost?: Profile;\r\n\tattendees?: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n\tconstructor(init?: ActivityFormValues) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n\r\nexport class ActivityFormValues {\r\n\tid?: string = undefined;\r\n\ttitle: string = \"\";\r\n\tcategory: string = \"\";\r\n\tcity: string = \"\";\r\n\tdescription: string = \"\";\r\n\tdate: Date | null = null;\r\n\tvenue: string = \"\";\r\n\r\n\tconstructor(activity?: ActivityFormValues) {\r\n\t\tif (activity) {\r\n\t\t\tthis.id = activity?.id;\r\n\t\t\tthis.title = activity.title;\r\n\t\t\tthis.category = activity.category;\r\n\t\t\tthis.city = activity.city;\r\n\t\t\tthis.description = activity.description;\r\n\t\t\tthis.date = activity.date;\r\n\t\t\tthis.venue = activity.venue;\r\n\t\t}\r\n\t}\r\n}\r\n","import { User } from \"./User\";\r\n\r\nexport interface UserActivity {\r\n\tid: string;\r\n\ttitle: string;\r\n\tdate: Date;\r\n\tcategory: string;\r\n}\r\n\r\nexport interface Profile {\r\n\tusername: string;\r\n\tdisplayName: string;\r\n\timage?: string;\r\n\tbio?: string;\r\n\tfollowersCount: number;\r\n\tfollowingsCount: number;\r\n\tfollowing: boolean;\r\n\tphotos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n\tconstructor(user: User) {\r\n\t\tthis.username = user.username;\r\n\t\tthis.displayName = user.displayName;\r\n\t\tthis.image = user.image;\r\n\t}\r\n}\r\n\r\nexport interface Photo {\r\n\tid: string;\r\n\turl: string;\r\n\tisMain: boolean;\r\n}\r\n","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Filters } from \"../common/enums/Filters\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n\tactivityRegistry = new Map<string, Activity>();\r\n\tselectedActivity: Activity | undefined = undefined;\r\n\teditMode = false;\r\n\tloading = false;\r\n\tloadingInitial = false;\r\n\tpagination: Pagination | null = null;\r\n\tpagingParams = new PagingParams();\r\n\tpredicate = new Map().set(Filters.all, true);\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\r\n\t\treaction(\r\n\t\t\t() => this.predicate.keys(),\r\n\t\t\t() => {\r\n\t\t\t\t// reset pagination to first page of result after applying new filter\r\n\t\t\t\tthis.pagingParams = new PagingParams();\r\n\t\t\t\tthis.activityRegistry.clear();\r\n\t\t\t\tthis.loadActivities();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t// computed properties\r\n\tget activitiesByDate() {\r\n\t\treturn Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime());\r\n\t}\r\n\r\n\tget groupedActivities() {\r\n\t\treturn Object.entries(\r\n\t\t\tthis.activitiesByDate.reduce((activities, activity) => {\r\n\t\t\t\tconst date = format(activity.date!, \"dd MMM yyyy\");\r\n\t\t\t\tactivities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n\t\t\t\treturn activities;\r\n\t\t\t}, {} as { [key: string]: Activity[] })\r\n\t\t);\r\n\t}\r\n\r\n\tget axiosParams() {\r\n\t\tconst params = new URLSearchParams();\r\n\t\tparams.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n\t\tparams.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n\r\n\t\tthis.predicate.forEach((value, key) => {\r\n\t\t\tif (key === Filters.startDate) {\r\n\t\t\t\tparams.append(key, (value as Date).toISOString());\r\n\t\t\t} else {\r\n\t\t\t\tparams.append(key, value);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\tsetPredicate = (predicate: string, value: string | Date) => {\r\n\t\tconst resetPredicate = () => {\r\n\t\t\tthis.predicate.forEach((value, key) => {\r\n\t\t\t\tif (key !== Filters.startDate) this.predicate.delete(key);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tswitch (predicate) {\r\n\t\t\tcase Filters.all:\r\n\t\t\t\tdebugger;\r\n\t\t\t\tresetPredicate();\r\n\t\t\t\tthis.predicate.set(Filters.all, value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Filters.isGoing:\r\n\t\t\t\tresetPredicate();\r\n\t\t\t\tthis.predicate.set(Filters.isGoing, value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Filters.isHost:\r\n\t\t\t\tresetPredicate();\r\n\t\t\t\tthis.predicate.set(Filters.isHost, value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Filters.startDate:\r\n\t\t\t\t// we must first delete previous date to trigger change reaction\r\n\t\t\t\tthis.predicate.delete(Filters.startDate);\r\n\t\t\t\tthis.predicate.set(Filters.startDate, value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error(\"Predicate key unknown!\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tloadActivities = async () => {\r\n\t\tthis.setLoadingInitial(true);\r\n\t\ttry {\r\n\t\t\tconst result = await agent.Activities.list(this.axiosParams);\r\n\t\t\tresult.data.forEach((activity) => {\r\n\t\t\t\tthis.setActivity(activity);\r\n\t\t\t});\r\n\r\n\t\t\tthis.setPagination(result.pagination);\r\n\t\t\tthis.setLoadingInitial(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tthis.setLoadingInitial(false);\r\n\t\t}\r\n\t};\r\n\r\n\tsetPagination = (pagination: Pagination) => {\r\n\t\tthis.pagination = pagination;\r\n\t};\r\n\r\n\tsetPagingParams = (pagingParams: PagingParams) => {\r\n\t\tthis.pagingParams = pagingParams;\r\n\t};\r\n\r\n\tloadActivity = async (id: string) => {\r\n\t\tlet activity = this.getActivity(id);\r\n\r\n\t\tif (activity) {\r\n\t\t\tthis.selectedActivity = activity;\r\n\t\t\treturn activity;\r\n\t\t} else {\r\n\t\t\tthis.loadingInitial = true;\r\n\t\t\ttry {\r\n\t\t\t\tactivity = await agent.Activities.details(id);\r\n\t\t\t\tthis.setActivity(activity);\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tthis.selectedActivity = activity;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setLoadingInitial(false);\r\n\t\t\t\treturn activity;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthis.setLoadingInitial(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tprivate getActivity = (id: string) => {\r\n\t\treturn this.activityRegistry.get(id);\r\n\t};\r\n\r\n\tprivate setActivity = (activity: Activity) => {\r\n\t\tconst user = store.userStore.user;\r\n\r\n\t\tif (user) {\r\n\t\t\tactivity.isGoing = activity.attendees!.some((a) => a.username === user.username);\r\n\t\t\tactivity.isHost = activity.hostUsername === user.username;\r\n\t\t\tactivity.host = activity.attendees?.find((x) => x.username === activity.hostUsername);\r\n\t\t}\r\n\r\n\t\tactivity.date = new Date(activity.date!);\r\n\t\tthis.activityRegistry.set(activity.id, activity);\r\n\t};\r\n\r\n\t// this method was implemented to avoid the warning about strict mode (see runInAction in documentation)\r\n\tsetLoadingInitial = (state: boolean) => {\r\n\t\tthis.loadingInitial = state;\r\n\t};\r\n\r\n\tcreateActivity = async (activity: ActivityFormValues) => {\r\n\t\tconst user = store.userStore.user;\r\n\t\tconst attendee = new Profile(user!);\r\n\t\tconst newActivity = new Activity(activity);\r\n\t\tnewActivity.hostUsername = user!.username;\r\n\t\tnewActivity.attendees = [attendee];\r\n\t\tthis.setActivity(newActivity);\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.create(activity);\r\n\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.selectedActivity = new Activity();\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tupdateActivity = async (activity: ActivityFormValues) => {\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.update(activity);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (activity.id) {\r\n\t\t\t\t\tlet updatedActivity = { ...this.getActivity(activity.id), ...activity };\r\n\t\t\t\t\tthis.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n\t\t\t\t\tthis.selectedActivity = updatedActivity as Activity;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tdeleteActivity = async (id: string) => {\r\n\t\tthis.loading = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.delete(id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.activityRegistry.delete(id);\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tupdateAttendance = async () => {\r\n\t\tconst user = store.userStore.user;\r\n\t\tthis.loading = true;\r\n\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.attend(this.selectedActivity!.id);\r\n\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.selectedActivity?.isGoing) {\r\n\t\t\t\t\tthis.selectedActivity.attendees = this.selectedActivity.attendees?.filter((u) => u.username !== user?.username);\r\n\t\t\t\t\tthis.selectedActivity.isGoing = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst attendee = new Profile(user!);\r\n\t\t\t\t\tthis.selectedActivity?.attendees?.push(attendee);\r\n\t\t\t\t\tthis.selectedActivity!.isGoing = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t} finally {\r\n\t\t\trunInAction(() => (this.loading = false));\r\n\t\t}\r\n\t};\r\n\r\n\tcancelActivityToggle = async () => {\r\n\t\tthis.loading = true;\r\n\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.attend(this.selectedActivity!.id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n\t\t\t\tthis.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t} finally {\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t};\r\n\r\n\tclearSelectedActivity = () => {\r\n\t\tthis.selectedActivity = undefined;\r\n\t};\r\n\r\n\tupdateAttendeeFollowing = (username: string) => {\r\n\t\tthis.activityRegistry.forEach((activity) => {\r\n\t\t\tactivity.attendees!.forEach((attendee) => {\r\n\t\t\t\tif (attendee.username === username) {\r\n\t\t\t\t\tattendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n\t\t\t\t\tattendee.following = !attendee.following;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n\tprofile: Profile | null = null;\r\n\tloadingProfile = false;\r\n\tloadingPhoto = false;\r\n\tloadingFollowings = false;\r\n\tloadingActivities = false;\r\n\tuploading = false;\r\n\tfollowings: Profile[] = [];\r\n\tactivities: UserActivity[] = [];\r\n\tactiveTab = 0;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\r\n\t\treaction(\r\n\t\t\t() => this.activeTab,\r\n\t\t\t(activeTab) => {\r\n\t\t\t\tif (activeTab === 3 || activeTab === 4) {\r\n\t\t\t\t\tconst predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n\t\t\t\t\tthis.loadFollowings(predicate);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.followings = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (activeTab === 2) {\r\n\t\t\t\t\tthis.loadActivities(this.profile!.username, \"future\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsetActiveTab = (tab: any) => {\r\n\t\tthis.activeTab = tab;\r\n\t};\r\n\r\n\tget isCurrentUser() {\r\n\t\tif (store.userStore.user && this.profile) {\r\n\t\t\treturn store.userStore.user.username === this.profile.username;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tloadProfile = async (username: string) => {\r\n\t\tthis.loadingProfile = true;\r\n\t\ttry {\r\n\t\t\tconst profile = await agent.Profiles.getProfile(username);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.profile = profile;\r\n\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loadingProfile = false));\r\n\t\t}\r\n\t};\r\n\r\n\tuploadPhoto = async (file: Blob) => {\r\n\t\tthis.uploading = true;\r\n\t\ttry {\r\n\t\t\tconst response = await agent.Profiles.uploadPhoto(file);\r\n\t\t\tconst photo = response.data;\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.profile) {\r\n\t\t\t\t\tthis.profile.photos?.push(photo);\r\n\t\t\t\t\tif (photo.isMain && store.userStore.user) {\r\n\t\t\t\t\t\tstore.userStore.setImage(photo.url);\r\n\t\t\t\t\t\tthis.profile.image = photo.url;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.uploading = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.uploading = false));\r\n\t\t}\r\n\t};\r\n\r\n\tsetMainPhoto = async (photo: Photo) => {\r\n\t\tthis.loadingPhoto = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.setMainPhoto(photo.id); // there was an await here\r\n\t\t\tstore.userStore.setImage(photo.id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\t// reset current main photo\r\n\t\t\t\tif (this.profile && this.profile.photos) {\r\n\t\t\t\t\tthis.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n\t\t\t\t\tthis.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n\t\t\t\t\tthis.profile.image = photo.url;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t} finally {\r\n\t\t\trunInAction(() => (this.loadingPhoto = false));\r\n\t\t}\r\n\t};\r\n\r\n\tdeletePhoto = async (photo: Photo) => {\r\n\t\tthis.loadingPhoto = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.deletePhoto(photo.id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.profile && this.profile.photos) {\r\n\t\t\t\t\tthis.profile.photos = this.profile.photos.filter((p) => p.id !== photo.id);\r\n\t\t\t\t\tthis.loadingPhoto = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loadingPhoto = false));\r\n\t\t}\r\n\t};\r\n\r\n\tupdateFollowing = async (username: string, shouldFollow: boolean) => {\r\n\t\tthis.loadingProfile = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.updateFollowings(username);\r\n\t\t\tstore.activityStore.updateAttendeeFollowing(username);\r\n\r\n\t\t\trunInAction(() => {\r\n\t\t\t\t// check if updating for current or other user\r\n\r\n\t\t\t\t// if updating for other user,\r\n\t\t\t\tif (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username !== username) {\r\n\t\t\t\t\tshouldFollow ? this.profile.followersCount++ : this.profile.followersCount--;\r\n\t\t\t\t\tthis.profile.following = !this.profile.following;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.profile && this.profile.username === store.userStore.user?.username) {\r\n\t\t\t\t\tshouldFollow ? this.profile.followingsCount++ : this.profile.followingsCount--;\r\n\t\t\t\t}\r\n\t\t\t\tthis.followings.forEach((profile) => {\r\n\t\t\t\t\tif (profile.username === username) {\r\n\t\t\t\t\t\tprofile.following ? profile.followersCount-- : profile.followersCount++;\r\n\t\t\t\t\t\tprofile.following = !profile.following;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loadingProfile = false));\r\n\t\t}\r\n\t};\r\n\r\n\tloadFollowings = async (predicate: string) => {\r\n\t\tthis.loadingFollowings = true;\r\n\t\ttry {\r\n\t\t\tconst followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.followings = followings;\r\n\t\t\t\tthis.loadingFollowings = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\trunInAction(() => (this.loadingFollowings = false));\r\n\t\t}\r\n\t};\r\n\r\n\tloadActivities = async (username: string, predicate?: string) => {\r\n\t\tthis.loadingActivities = true;\r\n\t\ttry {\r\n\t\t\tconst activities = await agent.Profiles.listActivities(username, predicate!);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.activities = activities;\r\n\t\t\t\tthis.loadingActivities = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\trunInAction(() => (this.loadingActivities = false));\r\n\t\t}\r\n\t};\r\n\r\n\tupdateProfile = async (profile: Partial<Profile>) => {\r\n\t\tthis.loadingProfile = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.updateProfile(profile);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n\t\t\t\t\tstore.userStore.setDisplayName(profile.displayName);\r\n\t\t\t\t}\r\n\t\t\t\tthis.profile = { ...this.profile, ...(profile as Profile) };\r\n\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loadingProfile = false));\r\n\t\t}\r\n\t};\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n\tuser: User | null = null;\r\n\tfbAccessToken: string | null = null;\r\n\tfbLoading = false;\r\n\trefeshTokenTimeout: any;\r\n\r\n\tprivate TOKEN_REFRESH_SECONDS = 60;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tget isLoggedIn() {\r\n\t\treturn !!this.user;\r\n\t}\r\n\r\n\tlogin = async (creds: UserFormValues) => {\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.login(creds);\r\n\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\tthis.StartRefreshTokenTimer(user);\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t\thistory.push(\"/activities\");\r\n\t\t\tstore.modalStore.closeModal();\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\t// set to async to make sure we return a Promise\r\n\tgetFacebookLoginStatus = async () => {\r\n\t\twindow.FB.getLoginStatus((response) => {\r\n\t\t\tif (response.status === \"connected\") {\r\n\t\t\t\tthis.fbAccessToken = response.authResponse.accessToken;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tfacebookLogin = () => {\r\n\t\tthis.fbLoading = true;\r\n\t\tconst apiLogin = (accessToken: string) => {\r\n\t\t\tagent.Account.fbLogin(accessToken)\r\n\t\t\t\t.then((user) => {\r\n\t\t\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\t\t\tthis.StartRefreshTokenTimer(user);\r\n\t\t\t\t\trunInAction(() => {\r\n\t\t\t\t\t\tthis.user = user;\r\n\t\t\t\t\t\tthis.fbLoading = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t\thistory.push(\"/activities\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\trunInAction(() => (this.fbLoading = false));\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tif (this.fbAccessToken) {\r\n\t\t\tapiLogin(this.fbAccessToken);\r\n\t\t} else {\r\n\t\t\twindow.FB.login(\r\n\t\t\t\t(response) => {\r\n\t\t\t\t\tapiLogin(response.authResponse.accessToken);\r\n\t\t\t\t},\r\n\t\t\t\t{ scope: \"public_profile,email\" }\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tlogout = () => {\r\n\t\tstore.commonStore.setToken(null);\r\n\t\twindow.localStorage.removeItem(\"jwt\");\r\n\t\tthis.user = null;\r\n\t\thistory.push(\"/\");\r\n\t};\r\n\r\n\tregister = async (creds: UserFormValues) => {\r\n\t\ttry {\r\n\t\t\tawait agent.Account.register(creds);\r\n\r\n\t\t\t// store.commonStore.setToken(user.token);\r\n\t\t\t// this.StartRefreshTokenTimer(user);\r\n\t\t\t// runInAction(() => (this.user = user));\r\n\t\t\thistory.push(`/account/registerSuccess?email=${creds.email}`);\r\n\t\t\tstore.modalStore.closeModal();\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\trefreshToken = async () => {\r\n\t\tthis.StopRefreshTokenTimer();\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.refreshToken();\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\tthis.StartRefreshTokenTimer(user);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate StartRefreshTokenTimer = (user: User) => {\r\n\t\t// access token expiry datetime and refresh token 30 seconds before it expires\r\n\t\tconst jwtToken = JSON.parse(atob(user.token.split(\".\")[1]));\r\n\t\tconst expires = new Date(jwtToken.exp * 1000);\r\n\t\tconst timeout = expires.getTime() - Date.now() - this.TOKEN_REFRESH_SECONDS * 1000;\r\n\t\tthis.refeshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n\t};\r\n\r\n\tprivate StopRefreshTokenTimer = () => {\r\n\t\tclearTimeout(this.refeshTokenTimeout);\r\n\t};\r\n\r\n\tgetUser = async () => {\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.current();\r\n\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\tthis.StartRefreshTokenTimer(user);\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tsetImage = (image: string) => {\r\n\t\tif (this.user) this.user.image = image;\r\n\t};\r\n\r\n\tsetDisplayName = (name: string) => {\r\n\t\tif (this.user) this.user.displayName = name;\r\n\t};\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n\tactivityStore: ActivityStore;\r\n\tcommonStore: CommonStore;\r\n\tuserStore: UserStore;\r\n\tmodalStore: ModalStore;\r\n\tprofileStore: ProfileStore;\r\n\tcommentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n\tactivityStore: new ActivityStore(),\r\n\tcommonStore: new CommonStore(),\r\n\tuserStore: new UserStore(),\r\n\tmodalStore: new ModalStore(),\r\n\tprofileStore: new ProfileStore(),\r\n\tcommentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n\treturn useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\nexport default class CommonStore {\r\n\terror: ServerError | null = null;\r\n\ttoken: string | null = window.localStorage.getItem(\"jwt\");\r\n\tappLoaded = false;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\r\n\t\treaction(\r\n\t\t\t() => this.token,\r\n\t\t\t(token) => {\r\n\t\t\t\tif (token) {\r\n\t\t\t\t\twindow.localStorage.setItem(\"jwt\", token);\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.localStorage.removeItem(\"jwt\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsetServerError = (error: ServerError) => {\r\n\t\tthis.error = error;\r\n\t};\r\n\r\n\tsetToken = (token: string | null) => {\r\n\t\tthis.token = token;\r\n\t};\r\n\r\n\tsetAppLoaded = () => {\r\n\t\tthis.appLoaded = true;\r\n\t};\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n\topen: boolean;\r\n\tbody: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n\tmodal: Modal = { open: false, body: null };\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\topenModal = (content: JSX.Element | null) => {\r\n\t\tthis.modal.open = true;\r\n\t\tthis.modal.body = content;\r\n\t};\r\n\r\n\tcloseModal = () => {\r\n\t\tthis.modal.open = false;\r\n\t\tthis.modal.body = null;\r\n\t};\r\n}\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n\tcomments: ChatComment[] = [];\r\n\thubConnection: HubConnection | null = null;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tcreateHubConnection = (activityId: string) => {\r\n\t\tif (store.activityStore.selectedActivity) {\r\n\t\t\tthis.hubConnection = new HubConnectionBuilder()\r\n\t\t\t\t.withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=${activityId}`, {\r\n\t\t\t\t\taccessTokenFactory: () => store.userStore.user?.token!,\r\n\t\t\t\t})\r\n\t\t\t\t.withAutomaticReconnect()\r\n\t\t\t\t.configureLogging(LogLevel.Information)\r\n\t\t\t\t.build();\r\n\r\n\t\t\tthis.hubConnection.start().catch((e) => console.log(\"Error creating chat hub connection: \", e));\r\n\r\n\t\t\t// receive all comments to selected activity\r\n\t\t\tthis.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tcomments.forEach((comment) => {\r\n\t\t\t\t\t\tcomment.createdAt = new Date(comment.createdAt.toString().split(\"+\")[0] + \"Z\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.comments = comments;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tcomment.createdAt = new Date(comment.createdAt);\r\n\t\t\t\t\tthis.comments.unshift(comment);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tstopHubConnection = () => {\r\n\t\tthis.hubConnection?.stop().catch((e) => console.log(\"Error stopping hub connection: \", e));\r\n\t};\r\n\r\n\tclearComments = () => {\r\n\t\tthis.comments = [];\r\n\t\tthis.stopHubConnection();\r\n\t};\r\n\r\n\taddComment = async (values: any) => {\r\n\t\tvalues.activityId = store.activityStore.selectedActivity?.id;\r\n\r\n\t\ttry {\r\n\t\t\tawait this.hubConnection?.invoke(\"SendComment\", values);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n\tconst {\r\n\t\tuserStore: { user, logout, isLoggedIn },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<Menu inverted fixed=\"top\">\r\n\t\t\t<Container>\r\n\t\t\t\t<Menu.Item as={NavLink} exact to={\"/\"} header>\r\n\t\t\t\t\t<img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }} />\r\n\t\t\t\t\tReactivities\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t{isLoggedIn && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Menu.Item as={NavLink} to={\"/activities\"} name=\"Activities\" />\r\n\t\t\t\t\t\t<Menu.Item as={NavLink} to={\"/errors\"} name=\"Errors\" />\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<Button as={NavLink} to={\"/createActivity\"} positive content=\"Create Activity\" />\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t<Menu.Item position=\"right\">\r\n\t\t\t\t\t\t\t<Image src={user?.image || \"/assets/user.png\"} avatar spaced=\"right\" />\r\n\t\t\t\t\t\t\t<Dropdown pointing=\"top left\" text={user?.displayName}>\r\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text=\"Account\" icon=\"user\" />\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={logout} text=\"Log out\" icon=\"power\" />\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</Menu>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { Filters } from \"../../../app/common/enums/Filters\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n\tconst {\r\n\t\tactivityStore: { predicate, setPredicate },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n\t\t\t\t<Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n\t\t\t\t<Menu.Item content=\"All Activities\" active={predicate.has(Filters.all)} onClick={() => setPredicate(Filters.all, \"true\")} />\r\n\t\t\t\t<Menu.Item content=\"I'm going\" active={predicate.has(Filters.isGoing)} onClick={() => setPredicate(Filters.isGoing, \"true\")} />\r\n\t\t\t\t<Menu.Item content=\"I'm hosting\" active={predicate.has(Filters.isHost)} onClick={() => setPredicate(Filters.isHost, \"true\")} />\r\n\t\t\t</Menu>\r\n\t\t\t<Header />\r\n\t\t\t<Calendar onChange={(date: Date | null) => setPredicate(Filters.startDate, date as Date)} value={predicate.get(Filters.startDate) || new Date()} />\r\n\t\t</>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default function ProfileCard({ profile }: Props) {\r\n\tconst truncate = (bio: string | undefined) => {\r\n\t\treturn bio !== undefined && bio.length > 40 ? bio.substring(0, 37) + \"...\" : bio;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card as={Link} to={`/profiles/${profile.username}`}>\r\n\t\t\t<Image src={profile.image || \"/assets/user.png\"} />\r\n\t\t\t<Card.Content>\r\n\t\t\t\t<Card.Header>{profile.displayName}</Card.Header>\r\n\t\t\t\t<Card.Description> {truncate(profile.bio)}</Card.Description>\r\n\t\t\t</Card.Content>\r\n\t\t\t<Card.Content extra>\r\n\t\t\t\t<Icon name=\"user\" />\r\n\t\t\t\t{profile.followersCount} {profile.followersCount === 1 ? \"Follower\" : \"Followers\"}\r\n\t\t\t</Card.Content>\r\n\t\t\t{/* <FollowButton profile={profile} /> */}\r\n\t\t</Card>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../users/profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n\tattendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n\tconst iconStyleFollowing = {\r\n\t\tborderColor: \"orange\",\r\n\t\tborderWidth: 1,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List horizontal>\r\n\t\t\t{attendees.map((attendee) => (\r\n\t\t\t\t<Popup\r\n\t\t\t\t\thoverable\r\n\t\t\t\t\tkey={attendee.username}\r\n\t\t\t\t\ttrigger={\r\n\t\t\t\t\t\t<List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n\t\t\t\t\t\t\t<Image size=\"mini\" bordered style={attendee.following ? iconStyleFollowing : null} circular src={attendee.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Popup.Content>\r\n\t\t\t\t\t\t<ProfileCard profile={attendee} />\r\n\t\t\t\t\t</Popup.Content>\r\n\t\t\t\t</Popup>\r\n\t\t\t))}\r\n\t\t</List>\r\n\t);\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n\tactivity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\treturn (\r\n\t\t<Segment.Group>\r\n\t\t\t<Segment>\r\n\t\t\t\t{activity.isCancelled && <Label attached=\"top\" color=\"red\" content=\"Cancelled\" />}\r\n\t\t\t\t<Item.Group>\r\n\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t<Item.Image style={{ marginBottom: \"3\" }} size=\"tiny\" circular src={activity.host?.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t<Item.Content>\r\n\t\t\t\t\t\t\t<Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n\t\t\t\t\t\t\t\t{activity.title}\r\n\t\t\t\t\t\t\t</Item.Header>\r\n\t\t\t\t\t\t\t<Item.Description>\r\n\t\t\t\t\t\t\t\tHosted by <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\r\n\t\t\t\t\t\t\t</Item.Description>\r\n\t\t\t\t\t\t\t{activity.isHost && (\r\n\t\t\t\t\t\t\t\t<Label basic color=\"orange\">\r\n\t\t\t\t\t\t\t\t\tYou are hosting this activity\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{!activity.isHost && activity.isGoing && (\r\n\t\t\t\t\t\t\t\t<Label basic color=\"green\">\r\n\t\t\t\t\t\t\t\t\tYou are going to this activity\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t</Item.Group>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n\t\t\t\t\t<Icon name=\"marker\" /> {activity.venue}\r\n\t\t\t\t</span>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment secondary>\r\n\t\t\t\t<ActivityListItemAttendee attendees={activity.attendees!} />\r\n\t\t\t</Segment>\r\n\t\t\t<Segment clearing>\r\n\t\t\t\t<Item.Description>{activity.description}</Item.Description>\r\n\t\t\t\t<Button as={Link} to={`/activities/${activity.id}`} color=\"teal\" floated=\"right\" content=\"view\" />\r\n\t\t\t</Segment>\r\n\t\t</Segment.Group>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n\tconst { activityStore } = useStore();\r\n\tconst { groupedActivities } = activityStore;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{groupedActivities.map(([group, activities]) => (\r\n\t\t\t\t<Fragment key={group}>\r\n\t\t\t\t\t<Header sub color=\"teal\">\r\n\t\t\t\t\t\t{group}\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t{activities.map((activity) => {\r\n\t\t\t\t\t\treturn <ActivityListItem key={activity.id} activity={activity} />;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Fragment>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Placeholder fluid style={{ marginTop: 25 }}>\r\n\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t<Segment style={{ minHeight: 110 }}>\r\n\t\t\t\t\t\t<Placeholder>\r\n\t\t\t\t\t\t\t<Placeholder.Header image>\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t</Placeholder.Header>\r\n\t\t\t\t\t\t\t<Placeholder.Paragraph>\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t</Placeholder.Paragraph>\r\n\t\t\t\t\t\t</Placeholder>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Placeholder>\r\n\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t</Placeholder>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t\t<Segment secondary style={{ minHeight: 70 }} />\r\n\t\t\t\t\t<Segment clearing>\r\n\t\t\t\t\t\t<Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Segment.Group>\r\n\t\t\t</Placeholder>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n\tconst { activityStore } = useStore();\r\n\tconst { loadActivities, activityRegistry, loadingInitial, setPagingParams, pagination } = activityStore;\r\n\tconst [loadingNext, setLoadingNext] = useState(false);\r\n\r\n\tfunction handleGetNext() {\r\n\t\tsetLoadingNext(true);\r\n\t\tsetPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n\t\tloadActivities().then(() => setLoadingNext(false));\r\n\t}\r\n\r\n\t// fetch activities from API server if not already loaded (if size of registry is 0 or 1 in case one was just created)\r\n\tuseEffect(() => {\r\n\t\tif (activityRegistry.size <= 1) loadActivities();\r\n\t}, [activityRegistry.size, loadActivities]);\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width=\"10\">\r\n\t\t\t\t{loadingInitial && !loadingNext ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ActivityListItemPlaceholder />\r\n\t\t\t\t\t\t<ActivityListItemPlaceholder />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<InfiniteScroll pageStart={0} loadMore={handleGetNext} hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages} initialLoad={false}>\r\n\t\t\t\t\t\t<ActivityList />\r\n\t\t\t\t\t</InfiniteScroll>\r\n\t\t\t\t)}\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width=\"6\">\r\n\t\t\t\t<ActivityFilters />\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t<Loader active={loadingNext}></Loader>\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tname: string;\r\n\tplaceholder: string;\r\n\tlabel?: string;\r\n\ttype?: string;\r\n}\r\n\r\nexport default function CommonTextInput(props: Props) {\r\n\t// bind the name to the field input\r\n\tconst [field, meta] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<input {...field} {...props} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{meta.error}{\" \"}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport CommonTextInput from \"../../../app/common/forms/CommonTextInput\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n\tconst { userStore } = useStore();\r\n\r\n\treturn (\r\n\t\t<Formik initialValues={{ email: \"\", password: \"\", error: null }} onSubmit={(values, { setErrors }) => userStore.login(values).catch((error) => setErrors({ error: error.response.data }))}>\r\n\t\t\t{({ handleSubmit, isSubmitting, errors }) => (\r\n\t\t\t\t<Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n\t\t\t\t\t<Header as=\"h3\" content=\"Login\" textAlign=\"center\" />\r\n\t\t\t\t\t<CommonTextInput name=\"email\" placeholder=\"Email\" />\r\n\t\t\t\t\t<CommonTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\t\t\t\t\t<ErrorMessage name=\"error\" render={() => <Label style={{ marginBottom: \"10px\" }} color=\"red\" content={errors.error} />} />\r\n\t\t\t\t\t<Button loading={isSubmitting} positive content=\"Login\" type=\"submit\" fluid />\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\terrors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n\treturn (\r\n\t\t<Message error>\r\n\t\t\t{errors && (\r\n\t\t\t\t<Message.List>\r\n\t\t\t\t\t{errors.map((err: any, i: any) => (\r\n\t\t\t\t\t\t<Message.Item key={i}>{err}</Message.Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Message.List>\r\n\t\t\t)}\r\n\t\t</Message>\r\n\t);\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport CommonTextInput from \"../../../app/common/forms/CommonTextInput\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as yup from \"yup\";\r\nimport ValidationErrors from \"../../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n\tconst { userStore } = useStore();\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ displayName: \"\", username: \"\", email: \"\", password: \"\", error: null }}\r\n\t\t\tonSubmit={(values, { setErrors }) => userStore.register(values).catch((error) => setErrors({ error }))}\r\n\t\t\tvalidationSchema={yup.object({\r\n\t\t\t\tdisplayName: yup.string().required(),\r\n\t\t\t\tusername: yup.string().required(),\r\n\t\t\t\temail: yup.string().required().email(),\r\n\t\t\t\tpassword: yup.string().required(),\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n\t\t\t\t<Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n\t\t\t\t\t<Header as=\"h3\" content=\"Registration\" textAlign=\"center\" />\r\n\t\t\t\t\t<CommonTextInput name=\"email\" placeholder=\"Email\" />\r\n\t\t\t\t\t<CommonTextInput name=\"displayName\" placeholder=\"Display name\" />\r\n\t\t\t\t\t<CommonTextInput name=\"username\" placeholder=\"Username\" />\r\n\t\t\t\t\t<CommonTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\t\t\t\t\t<ErrorMessage name=\"error\" render={() => <ValidationErrors errors={errors.error} />} />\r\n\t\t\t\t\t<Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content=\"Sign Up\" type=\"submit\" fluid />\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Divider, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/forms/LoginForm\";\r\nimport RegisterForm from \"../users/forms/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n\tconst { userStore, modalStore } = useStore();\r\n\treturn (\r\n\t\t<Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n\t\t\t<Container text>\r\n\t\t\t\t<Header as=\"h1\" inverted>\r\n\t\t\t\t\t<Image size=\"large\" src=\"/assets/logo.png\" alt=\"logo\" />\r\n\t\t\t\t\tReactivities\r\n\t\t\t\t</Header>\r\n\t\t\t\t{userStore.isLoggedIn ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Header as=\"h2\" inverted content=\"Welcome back!\" />\r\n\t\t\t\t\t\t<Button as={Link} to=\"/activities\" size=\"huge\" inverted content=\"Go to activities\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Header as=\"h2\" inverted content=\"Welcome to reactivities!\" />\r\n\t\t\t\t\t\t<Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted content=\"Login\" />\r\n\t\t\t\t\t\t<Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted content=\"Register\" />\r\n\t\t\t\t\t\t<Divider horizontal inverted content=\"or\" />\r\n\t\t\t\t\t\t<Button loading={userStore.fbLoading} size=\"huge\" inverted color=\"facebook\" content=\"Login with Facebook\" onClick={userStore.facebookLogin} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</Segment>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tinverted?: boolean; // darken backgroud when loading\r\n\tcontent?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ inverted = true, content = \"Loading...\" }: Props) {\r\n\treturn (\r\n\t\t<Dimmer active inverted={inverted}>\r\n\t\t\t<Loader content={content} />\r\n\t\t</Dimmer>\r\n\t);\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tname: string;\r\n\tplaceholder: string;\r\n\tlabel?: string;\r\n\trows?: number;\r\n}\r\n\r\nexport default function CommonTextArea(props: Props) {\r\n\t// bind the name to the field input\r\n\tconst [field, meta] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<textarea {...field} {...props} rows={props.rows} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{meta.error}{\" \"}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tname: string;\r\n\tplaceholder: string;\r\n\tlabel?: string;\r\n\toptions: any;\r\n}\r\n\r\nexport default function DropdownInput(props: Props) {\r\n\t// bind the name to the field input\r\n\tconst [field, meta, helpers] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<Select clearable options={props.options} value={field.value || null} onChange={(e, d) => helpers.setValue(d.value)} onBlur={() => helpers.setTouched(true)} placeholder={props.placeholder} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{meta.error}{\" \"}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n}\r\n","export const categories = [\r\n\t{ text: \"Drinks\", value: \"drinks\" },\r\n\t{ text: \"Culture\", value: \"culture\" },\r\n\t{ text: \"Film\", value: \"film\" },\r\n\t{ text: \"Food\", value: \"food\" },\r\n\t{ text: \"Music\", value: \"music\" },\r\n\t{ text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function DateInput(props: Partial<ReactDatePickerProps>) {\r\n\t// bind the name to the field input\r\n\tconst [field, meta, helpers] = useField(props.name!);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<DatePicker {...field} {...props} selected={(field.value && new Date(field.value)) || null} onChange={(value) => helpers.setValue(value)} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport * as yup from \"yup\";\r\nimport CommonTextInput from \"../../../app/common/forms/CommonTextInput\";\r\nimport CommonTextArea from \"../../../app/common/forms/CommonTextArea\";\r\nimport DropdownInput from \"../../../app/common/forms/DropdownInput\";\r\nimport { categories } from \"../../../app/common/enums/categories\";\r\nimport DateInput from \"../../../app/common/forms/DateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n\tconst history = useHistory();\r\n\tconst { activityStore } = useStore();\r\n\tconst { createActivity, loadActivity, updateActivity, loadingInitial } = activityStore;\r\n\tconst { id } = useParams<{ id: string }>();\r\n\r\n\tconst [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n\tconst validationSchema = yup.object({\r\n\t\ttitle: yup.string().required(\"Please enter the title!\"),\r\n\t\tcategory: yup.string().required(),\r\n\t\tdescription: yup.string().required(),\r\n\t\tdate: yup.string().required(\"Please enter a valid date!\").nullable(),\r\n\t\tcity: yup.string().required(),\r\n\t\tvenue: yup.string().required(),\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\r\n\t}, [id, loadActivity]); // by adding dependencies we only execute code if any of the dependencies changed\r\n\r\n\tfunction handleFormSubmit(activity: ActivityFormValues) {\r\n\t\tif (!activity.id) {\r\n\t\t\tlet newActivity = { ...activity, id: uuid() };\r\n\t\t\tcreateActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\r\n\t\t} else {\r\n\t\t\tupdateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n\t\t}\r\n\t}\r\n\r\n\tif (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n\treturn (\r\n\t\t<Segment clearing>\r\n\t\t\t<Header content=\"Activity details\" sub color=\"teal\"></Header>\r\n\t\t\t<Formik validationSchema={validationSchema} enableReinitialize initialValues={activity} onSubmit={(values) => handleFormSubmit(values)}>\r\n\t\t\t\t{({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n\t\t\t\t\t<Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"false\">\r\n\t\t\t\t\t\t<CommonTextInput placeholder=\"Title\" name=\"title\" />\r\n\t\t\t\t\t\t<CommonTextArea placeholder=\"Description\" name=\"description\" />\r\n\t\t\t\t\t\t<DropdownInput options={categories} placeholder=\"Select a category\" name=\"category\" />\r\n\t\t\t\t\t\t<DateInput placeholderText=\"Date\" name=\"date\" showTimeSelect timeCaption=\"time\" dateFormat=\"MMMM d, yyyy h:mm aa\" />\r\n\t\t\t\t\t\t<Header content=\"Location details\" sub color=\"teal\" />\r\n\t\t\t\t\t\t<CommonTextInput placeholder=\"City\" name=\"city\" />\r\n\t\t\t\t\t\t<CommonTextInput placeholder=\"Venue\" name=\"venue\" />\r\n\t\t\t\t\t\t<Button disabled={isSubmitting || !dirty || !isValid} loading={isSubmitting} floated=\"right\" positive type=\"submit\" content=\"Submit\" />\r\n\t\t\t\t\t\t<Button as={Link} to={\"/activities\"} loading={isSubmitting} floated=\"right\" type=\"button\" content=\"Cancel\" />\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Segment>\r\n\t);\r\n});\r\n","import { Field, FieldProps, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n\tactivityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n\tconst { commentStore } = useStore();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activityId) {\r\n\t\t\tcommentStore.createHubConnection(activityId);\r\n\t\t}\r\n\r\n\t\t// cleanup all comments and stop hub connection when compoment gets destroyed\r\n\t\treturn () => {\r\n\t\t\tcommentStore.clearComments();\r\n\t\t};\r\n\t}, [commentStore, activityId]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{ border: \"none\" }}>\r\n\t\t\t\t<Header>Chat about this event</Header>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment attached clearing>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tonSubmit={(values, { resetForm }) => commentStore.addComment(values).then(() => resetForm())}\r\n\t\t\t\t\tinitialValues={{ body: \"\" }}\r\n\t\t\t\t\tvalidationSchema={yup.object({ body: yup.string().required() })}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({ isSubmitting, isValid, handleSubmit }) => (\r\n\t\t\t\t\t\t<Form className=\"ui form\">\r\n\t\t\t\t\t\t\t<Field name=\"body\">\r\n\t\t\t\t\t\t\t\t{(props: FieldProps) => (\r\n\t\t\t\t\t\t\t\t\t<div style={{ position: \"relative\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<Loader active={isSubmitting} />\r\n\t\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add a comment (ENTER to submit)\"\r\n\t\t\t\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\t\t\t\t{...props.field}\r\n\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.shiftKey) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prvent starting new line\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisValid && handleSubmit();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t\t<Comment.Group>\r\n\t\t\t\t\t{commentStore.comments.map((comment) => (\r\n\t\t\t\t\t\t<Comment key={comment.id}>\r\n\t\t\t\t\t\t\t<Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t\t<Comment.Content>\r\n\t\t\t\t\t\t\t\t<Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n\t\t\t\t\t\t\t\t\t{comment.displayName}\r\n\t\t\t\t\t\t\t\t</Comment.Author>\r\n\t\t\t\t\t\t\t\t<Comment.Metadata>\r\n\t\t\t\t\t\t\t\t\t<div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n\t\t\t\t\t\t\t\t</Comment.Metadata>\r\n\t\t\t\t\t\t\t\t<Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>{comment.body}</Comment.Text>\r\n\t\t\t\t\t\t\t</Comment.Content>\r\n\t\t\t\t\t\t</Comment>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Comment.Group>\r\n\t\t\t</Segment>\r\n\t\t</>\r\n\t);\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n\tfilter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n\tposition: \"absolute\",\r\n\tbottom: \"5%\",\r\n\tleft: \"5%\",\r\n\twidth: \"100%\",\r\n\theight: \"auto\",\r\n\tcolor: \"white\",\r\n};\r\n\r\ninterface Props {\r\n\tactivity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n\tconst {\r\n\t\tactivityStore: { updateAttendance, loading, cancelActivityToggle },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<Segment.Group>\r\n\t\t\t<Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n\t\t\t\t{activity.isCancelled && <Label style={{ position: \"absolute\", zIndex: \"100\", left: \"-14\", top: \"20\" }} ribbon color=\"red\" content=\"Cancelled\" />}\r\n\t\t\t\t<Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n\t\t\t\t<Segment style={activityImageTextStyle} basic>\r\n\t\t\t\t\t<Item.Group>\r\n\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t<Item.Content>\r\n\t\t\t\t\t\t\t\t<Header size=\"huge\" content={activity.title} style={{ color: \"white\" }} />\r\n\t\t\t\t\t\t\t\t<p>{activity.date != null ? format(activity.date!, \"dd MMM yyyy\") : \"\"}</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tHosted by{\" \"}\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t</Item.Group>\r\n\t\t\t\t</Segment>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment clearing attached=\"bottom\">\r\n\t\t\t\t{activity.isHost ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button onClick={cancelActivityToggle} color={activity.isCancelled ? \"green\" : \"red\"} floated=\"left\" basic loading={loading}>\r\n\t\t\t\t\t\t\t{activity.isCancelled ? \"Reactivate\" : \"Cancel\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button disabled={activity.isCancelled} as={Link} to={`/manage/${activity.id}`} color=\"orange\" floated=\"right\">\r\n\t\t\t\t\t\t\tManage Event\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : activity.isGoing ? (\r\n\t\t\t\t\t<Button onClick={updateAttendance} loading={loading}>\r\n\t\t\t\t\t\tCancel attendance\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button disabled={activity.isCancelled} onClick={updateAttendance} loading={loading} color=\"teal\">\r\n\t\t\t\t\t\tJoin Activity\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Segment>\r\n\t\t</Segment.Group>\r\n\t);\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n\tactivity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n\treturn (\r\n\t\t<Segment.Group>\r\n\t\t\t<Segment attached=\"top\">\r\n\t\t\t\t<Grid>\r\n\t\t\t\t\t<Grid.Column width={1}>\r\n\t\t\t\t\t\t<Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={15}>\r\n\t\t\t\t\t\t<p>{activity.description}</p>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment attached>\r\n\t\t\t\t<Grid verticalAlign=\"middle\">\r\n\t\t\t\t\t<Grid.Column width={1}>\r\n\t\t\t\t\t\t<Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={15}>\r\n\t\t\t\t\t\t<span>{activity.date != null ? format(activity.date!, \"dd MMM yyyy h:mm aa\") : \"\"}</span>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment attached>\r\n\t\t\t\t<Grid verticalAlign=\"middle\">\r\n\t\t\t\t\t<Grid.Column width={1}>\r\n\t\t\t\t\t\t<Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={11}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{activity.venue}, {activity.city}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n\t\t</Segment.Group>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n\tactivity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\r\n\tif (!attendees) return null;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Segment textAlign=\"center\" style={{ border: \"none\" }} attached=\"top\" secondary inverted color=\"teal\">\r\n\t\t\t\t{attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n\t\t\t</Segment>\r\n\t\t\t<Segment attached>\r\n\t\t\t\t<List relaxed divided>\r\n\t\t\t\t\t{attendees.map((attendee) => (\r\n\t\t\t\t\t\t<Item style={{ position: \"relative\" }} key={attendee.username}>\r\n\t\t\t\t\t\t\t{attendee.username === host?.username && (\r\n\t\t\t\t\t\t\t\t<Label style={{ position: \"absolute\" }} color=\"orange\" ribbon=\"right\">\r\n\t\t\t\t\t\t\t\t\tHost\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t\t<Item.Content verticalAlign=\"middle\">\r\n\t\t\t\t\t\t\t\t<Item.Header as=\"h3\">\r\n\t\t\t\t\t\t\t\t\t<Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n\t\t\t\t\t\t\t\t</Item.Header>\r\n\t\t\t\t\t\t\t\t{attendee.following && <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</Segment>\r\n\t\t</>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n\tconst { activityStore } = useStore();\r\n\tconst { selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity } = activityStore;\r\n\tconst { id } = useParams<{ id: string }>();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (id) loadActivity(id);\r\n\r\n\t\treturn () => clearSelectedActivity();\r\n\t}, [id, loadActivity, clearSelectedActivity]);\r\n\r\n\tif (loadingInitial || !activity) return <LoadingComponent />; // just to remove the error of undefined on activity\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width=\"10\">\r\n\t\t\t\t<ActivityDetailedHeader activity={activity} />\r\n\t\t\t\t<ActivityDetailedInfo activity={activity} />\r\n\t\t\t\t<ActivityDetailedChat activityId={activity.id} />\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width=\"6\">\r\n\t\t\t\t<ActivityDetailedSidebar activity={activity} />\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n\tconst baseUrl = process.env.REACT_APP_API_URL;\r\n\tconst [errors, setErrors] = useState(null);\r\n\r\n\tfunction handleNotFound() {\r\n\t\taxios.get(baseUrl + \"buggy/not-found\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleBadRequest() {\r\n\t\taxios.get(baseUrl + \"buggy/bad-request\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleServerError() {\r\n\t\taxios.get(baseUrl + \"buggy/server-error\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleUnauthorised() {\r\n\t\taxios.get(baseUrl + \"buggy/unauthorised\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleBadGuid() {\r\n\t\taxios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleValidationError() {\r\n\t\taxios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header as=\"h1\" content=\"Test Error component\" />\r\n\t\t\t<Segment>\r\n\t\t\t\t<Button.Group widths=\"7\">\r\n\t\t\t\t\t<Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleBadRequest} content=\"Bad Request\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleValidationError} content=\"Validation Error\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleServerError} content=\"Server Error\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleUnauthorised} content=\"Unauthorised\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n\t\t\t\t</Button.Group>\r\n\t\t\t</Segment>\r\n\t\t\t{errors && <ValidationErrors errors={errors} />}\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n\treturn (\r\n\t\t<Segment placeholder size=\"large\">\r\n\t\t\t<Header icon>\r\n\t\t\t\t<Icon name=\"search\" />\r\n\t\t\t\tOops! I cannot find the item you are looking for!\r\n\t\t\t</Header>\r\n\t\t\t<Segment.Inline>\r\n\t\t\t\t<Button primary as={NavLink} to={\"/activities\"} content=\"Go back\" />\r\n\t\t\t</Segment.Inline>\r\n\t\t</Segment>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n\tconst { commonStore } = useStore();\r\n\r\n\treturn (\r\n\t\t<Segment>\r\n\t\t\t<Header as=\"h1\" content=\"Server Error Occured\" />\r\n\t\t\t<Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n\t\t\t{commonStore.error?.details && (\r\n\t\t\t\t<Segment>\r\n\t\t\t\t\t<Header as=\"h4\" content=\"stack trace\" color=\"teal\" />\r\n\t\t\t\t\t<code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n\t\t\t\t</Segment>\r\n\t\t\t)}\r\n\t\t</Segment>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n\tconst { modalStore } = useStore();\r\n\treturn (\r\n\t\t<Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\r\n\t\t\t<Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n\t\t</Modal>\r\n\t);\r\n});\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../../app/models/Profile\";\r\n\r\ninterface Props {\r\n\tactivity: UserActivity;\r\n}\r\n\r\nexport default function ActivityCard({ activity }: Props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card as={Link} to={`/activities/${activity.id}`} key={activity.id}>\r\n\t\t\t\t<Image src={`/assets/categoryImages/${activity.category}.jpg`} style={{ minHeight: 100, objectFit: \"cover\" }} />\r\n\t\t\t\t<Card.Content>\r\n\t\t\t\t\t<Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n\t\t\t\t\t<Card.Meta textAlign=\"center\">\r\n\t\t\t\t\t\t<div>{format(new Date(activity.date), \"do LLLL\")}</div>\r\n\t\t\t\t\t\t<div>{format(new Date(activity.date), \"h:mm aa\")}</div>\r\n\t\t\t\t\t</Card.Meta>\r\n\t\t\t\t</Card.Content>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useEffect } from \"react\";\r\nimport { Card, Grid, Header, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityCard from \"./ActivityCard\";\r\n\r\nexport default observer(function ProfileActivities() {\r\n\tconst {\r\n\t\tprofileStore: { loadingActivities, loadActivities, activities, profile },\r\n\t} = useStore();\r\n\r\n\tconst panes = [\r\n\t\t{ menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n\t\t{ menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n\t\t{ menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tloadActivities(profile!.username);\r\n\t}, [loadActivities, profile]);\r\n\r\n\tconst handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n\t\tloadActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tab.Pane loading={loadingActivities}>\r\n\t\t\t\t<Grid>\r\n\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t<Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\tmenu={{ secondary: true, pointing: true }}\r\n\t\t\t\t\t\t\tpanes={panes}\r\n\t\t\t\t\t\t\tonTabChange={(e, data) => {\r\n\t\t\t\t\t\t\t\thandleTabChange(e, data);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Card.Group itemsPerRow={4}>\r\n\t\t\t\t\t\t\t{activities.map((activity) => (\r\n\t\t\t\t\t\t\t\t<ActivityCard key={activity.id} activity={activity} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Tab.Pane>\r\n\t\t</>\r\n\t);\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport CommonTextArea from \"../../../app/common/forms/CommonTextArea\";\r\nimport CommonTextInput from \"../../../app/common/forms/CommonTextInput\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as yup from \"yup\";\r\n\r\ninterface Props {\r\n\tsetEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n\tconst {\r\n\t\tprofileStore: { profile, updateProfile },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n\t\t\tonSubmit={(values) => updateProfile(values).then(() => setEditMode(false))}\r\n\t\t\tvalidationSchema={yup.object({\r\n\t\t\t\tdisplayName: yup.string().required(),\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{({ isSubmitting, isValid, dirty }) => (\r\n\t\t\t\t<Form className=\"ui form\" autoComplete=\"off\">\r\n\t\t\t\t\t<CommonTextInput name=\"displayName\" placeholder={profile?.displayName ?? \"Enter a display name\"} />\r\n\t\t\t\t\t<CommonTextArea name=\"bio\" placeholder={profile?.bio ?? \"Enter a bio\"} />\r\n\t\t\t\t\t<Button loading={isSubmitting} content=\"Save\" positive type=\"submit\" fluid disabled={!isValid || !dirty} />\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Divider, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileEditForm from \"../forms/ProfileEditForm\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n\tconst {\r\n\t\tprofileStore: { isCurrentUser, profile },\r\n\t} = useStore();\r\n\tconst [editProfileMode, setEditProfileMode] = useState(false);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header floated=\"left\" icon=\"user\" content={`About ${profile?.displayName}`} />\r\n\t\t\t\t\t{isCurrentUser && <Button floated=\"right\" basic content={editProfileMode ? \"Cancel\" : \"Edit\"} onClick={() => setEditProfileMode(!editProfileMode)} />}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t{editProfileMode ? (\r\n\t\t\t\t\t\t<ProfileEditForm setEditMode={setEditProfileMode} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div>{profile?.bio}</div>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n\tconst { profileStore } = useStore();\r\n\tconst { profile, followings, activeTab, loadingFollowings } = profileStore;\r\n\r\n\treturn (\r\n\t\t<Tab.Pane loading={loadingFollowings}>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header floated=\"left\" icon=\"user\" content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`} />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Card.Group itemsPerRow={4}>\r\n\t\t\t\t\t\t{followings.map((profile) => (\r\n\t\t\t\t\t\t\t<ProfileCard key={profile.username} profile={profile} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Card.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport Cropper from \"react-cropper\";\r\n\r\ninterface Props {\r\n\tsetCropper: (cropper: Cropper) => void;\r\n\tpreview: string;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ setCropper, preview }: Props) {\r\n\treturn (\r\n\t\t<Cropper\r\n\t\t\tsrc={preview}\r\n\t\t\tstyle={{ height: 200, width: \"100%\" }}\r\n\t\t\t// aspect ratio will enforce square images\r\n\t\t\tinitialAspectRatio={1}\r\n\t\t\taspectRatio={1}\r\n\t\t\tpreview=\".img-preview\"\r\n\t\t\tguides={false}\r\n\t\t\tviewMode={1}\r\n\t\t\tautoCropArea={1}\r\n\t\t\tbackground={false}\r\n\t\t\tonInitialized={(cropper) => setCropper(cropper)}\r\n\t\t/>\r\n\t);\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tsetFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n\tconst dropzoneStyle = {\r\n\t\tborder: \"dashed 3px #eee\",\r\n\t\tborderColor: \"#eee\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpaddingTop: \"30px\",\r\n\t\ttextAlign: \"center\" as \"center\", // mitigating TS warning\r\n\t\theight: 200,\r\n\t};\r\n\r\n\tconst activeDropzoneStyle = {\r\n\t\tborderColor: \"green\",\r\n\t};\r\n\r\n\tconst onDrop = useCallback(\r\n\t\t(acceptedFiles) => {\r\n\t\t\tsetFiles(\r\n\t\t\t\t// get preview of the dropped image\r\n\t\t\t\tacceptedFiles.map((file: any) =>\r\n\t\t\t\t\tObject.assign(file, {\r\n\t\t\t\t\t\tpreview: URL.createObjectURL(file),\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t},\r\n\t\t[setFiles]\r\n\t);\r\n\r\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n\treturn (\r\n\t\t<div {...getRootProps()} style={isDragActive ? { ...dropzoneStyle, ...activeDropzoneStyle } : dropzoneStyle}>\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<Icon name=\"upload\" size=\"huge\" />\r\n\t\t\t<Header content=\"Drop image here\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n\tloading: boolean;\r\n\tuploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n\tconst [files, setFiles] = useState<any>([]);\r\n\tconst [cropper, setCropper] = useState<Cropper>();\r\n\r\n\tfunction onCrop() {\r\n\t\tif (cropper) {\r\n\t\t\tcropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n\t\t}\r\n\t}\r\n\r\n\t// cleanup preview urls\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tfiles.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n\t\t};\r\n\t}, [files]);\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 1 - Add Photo\"></Header>\r\n\t\t\t\t<PhotoWidgetDropzone setFiles={setFiles} />\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={1} />\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 2 - Resize Image\"></Header>\r\n\t\t\t\t{files && files.length > 0 && <PhotoWidgetCropper setCropper={setCropper} preview={files[0].preview} />}\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={1} />\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 3 - Preview and Upload\"></Header>\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"img-preview\" style={{ minHeight: 200, overflow: \"hidden\" }} />\r\n\t\t\t\t\t{files && files.length > 0 && (\r\n\t\t\t\t\t\t<Button.Group widths={2}>\r\n\t\t\t\t\t\t\t<Button icon=\"check\" loading={loading} onClick={onCrop} positive />\r\n\t\t\t\t\t\t\t<Button icon=\"close\" disable={loading ? true : false} onClick={() => setFiles([])} />\r\n\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button, Icon } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../../app/common/uploads/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../../app/models/Profile\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n\tconst { profileStore } = useStore();\r\n\tconst [addPhotoMode, setAddPhotoMode] = useState(false);\r\n\tconst [target, setTarget] = useState(\"\");\r\n\r\n\tfunction handleUploadPhoto(file: Blob) {\r\n\t\tprofileStore.uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n\t}\r\n\r\n\tfunction handleSetMainPhoto(photo: Photo, event: SyntheticEvent<HTMLButtonElement>) {\r\n\t\tsetTarget(event.currentTarget.name);\r\n\t\tprofileStore.setMainPhoto(photo);\r\n\t}\r\n\r\n\tfunction handleDeletePhoto(photo: Photo, event: SyntheticEvent<HTMLButtonElement>) {\r\n\t\tsetTarget(event.currentTarget.name);\r\n\t\tprofileStore.deletePhoto(photo);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Tab.Pane>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n\t\t\t\t\t{profileStore.isCurrentUser && <Button floated=\"right\" basic content={addPhotoMode ? \"Cancel\" : \"Add Photo\"} onClick={() => setAddPhotoMode(!addPhotoMode)} />}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t{addPhotoMode ? (\r\n\t\t\t\t\t\t<PhotoUploadWidget uploadPhoto={handleUploadPhoto} loading={profileStore.uploading} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Card.Group itemsPerRow={5}>\r\n\t\t\t\t\t\t\t{profile.photos?.map((photo) => (\r\n\t\t\t\t\t\t\t\t<Card key={photo.id}>\r\n\t\t\t\t\t\t\t\t\t<Image src={photo.url} />\r\n\t\t\t\t\t\t\t\t\t{profileStore.isCurrentUser && (\r\n\t\t\t\t\t\t\t\t\t\t<Button.Group fluid widths={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* set main button */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated=\"vertical\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleSetMainPhoto(photo, e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"main\" + photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMain}\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={target === \"main\" + photo.id && profileStore.loadingPhoto}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button.Content visible>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"user circle\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button.Content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button.Content hidden content=\"set main\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* delete button */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated=\"vertical\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMain}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleDeletePhoto(photo, e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={target === photo.id && profileStore.loadingPhoto}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button.Content visible>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"trash\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button.Content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button.Content hidden color=\"red\" content=\"delete\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileDetails from \"./ProfileDetails\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n\tconst { profileStore } = useStore();\r\n\r\n\tconst panes = [\r\n\t\t{ menuItem: \"About\", render: () => <ProfileDetails /> },\r\n\t\t{ menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n\t\t{ menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n\t\t{ menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n\t\t{ menuItem: \"Following\", render: () => <ProfileFollowings /> },\r\n\t];\r\n\treturn (\r\n\t\t<Tab\r\n\t\t\tmenu={{ fluid: true, vertical: true }}\r\n\t\t\tmenuPosition=\"right\"\r\n\t\t\tpanes={panes}\r\n\t\t\tonTabChange={(e, data) => {\r\n\t\t\t\tprofileStore.setActiveTab(data.activeIndex);\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n\tconst { profileStore, userStore } = useStore();\r\n\tconst { updateFollowing, loadingProfile } = profileStore;\r\n\r\n\tfunction handleFollow(e: SyntheticEvent, username: string) {\r\n\t\t// prevent button from opening user profile\r\n\t\te.preventDefault();\r\n\t\tupdateFollowing(username, !profile.following);\r\n\t}\r\n\r\n\t// dont display button if reviewing own profile\r\n\tif (userStore.user?.username === profile.username) return null;\r\n\treturn (\r\n\t\t<Reveal animated=\"move\">\r\n\t\t\t<Reveal.Content visible style={{ width: \"100%\" }}>\r\n\t\t\t\t<Button fluid color=\"teal\" content={profile.following ? \"Following\" : \"Not following\"} />\r\n\t\t\t</Reveal.Content>\r\n\t\t\t<Reveal.Content hidden style={{ width: \"100%\" }}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfluid\r\n\t\t\t\t\tbasic\r\n\t\t\t\t\tloading={loadingProfile}\r\n\t\t\t\t\tonClick={(e) => handleFollow(e, profile.username)}\r\n\t\t\t\t\tcolor={profile.following ? \"red\" : \"green\"}\r\n\t\t\t\t\tcontent={profile.following ? \"Unfollow\" : \"Follow\"}\r\n\t\t\t\t/>\r\n\t\t\t</Reveal.Content>\r\n\t\t</Reveal>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n\treturn (\r\n\t\t<Segment>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={12}>\r\n\t\t\t\t\t<Item.Group>\r\n\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t<Item.Image avatar size=\"small\" src={profile.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t\t<Item.Content verticalAlign=\"middle\">\r\n\t\t\t\t\t\t\t\t<Header as=\"h1\" content={profile.displayName} />\r\n\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t</Item.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t\t<Statistic.Group>\r\n\t\t\t\t\t\t<Statistic label=\"Following\" value={profile.followingsCount} />\r\n\t\t\t\t\t\t<Statistic label={profile.followersCount === 1 ? \"Follower\" : \"Followers\"} value={profile.followersCount} />\r\n\t\t\t\t\t</Statistic.Group>\r\n\t\t\t\t\t<Divider></Divider>\r\n\t\t\t\t\t<FollowButton profile={profile} />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Segment>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n\tconst { username } = useParams<{ username: string }>();\r\n\tconst { profileStore } = useStore();\r\n\tconst { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadProfile(username);\r\n\t\treturn () => setActiveTab(0);\r\n\t}, [loadProfile, username, setActiveTab]);\r\n\r\n\tif (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t{profile && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ProfileHeader profile={profile} />\r\n\t\t\t\t\t\t<ProfileContent profile={profile} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n\tcomponent: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n\tconst {\r\n\t\tuserStore: { isLoggedIn },\r\n\t} = useStore();\r\n\r\n\treturn <Route {...rest} render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to={\"/\"} />)} />;\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery() {\r\n\treturn new URLSearchParams(useLocation().search);\r\n}\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Divider, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport useQuery from \"../../app/common/utils/hooks\";\r\n\r\nexport default function RegisterSuccess() {\r\n\tconst email = useQuery().get(\"email\") as string;\r\n\r\n\tfunction handleConfirmEmailResend() {\r\n\t\tagent.Account.resendEmailConfirm(email)\r\n\t\t\t.then(() => {\r\n\t\t\t\ttoast.success(\"Verification email resent - please check your inbox.\");\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\t}\r\n\treturn (\r\n\t\t<Segment placeholder textAlign=\"center\">\r\n\t\t\t<Header icon color=\"green\">\r\n\t\t\t\t<Icon name=\"check\">Registration successful!</Icon>\r\n\t\t\t</Header>\r\n\t\t\t<p>Please check your inbox, including the Spam folder for the verification email</p>\r\n\t\t\t<Divider></Divider>\r\n\t\t\t{email && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<p>Didn't receive the email? Click the button below to resend.</p>\r\n\t\t\t\t\t<Button primary onClick={handleConfirmEmailResend} content=\"Resend email\" size=\"huge\" />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Segment>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport useQuery from \"../../app/common/utils/hooks\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"./forms/LoginForm\";\r\n\r\nexport default function ConfirmEmail() {\r\n\tconst { modalStore } = useStore();\r\n\tconst email = useQuery().get(\"email\") as string;\r\n\tconst token = useQuery().get(\"token\") as string;\r\n\r\n\tconst Status = {\r\n\t\tVerifying: \"Verifying\",\r\n\t\tFailed: \"Failed\",\r\n\t\tSuccess: \"Success\",\r\n\t};\r\n\r\n\tconst [status, setStatus] = useState(Status.Verifying);\r\n\r\n\tfunction handleConfirmEmailResend() {\r\n\t\tagent.Account.resendEmailConfirm(email)\r\n\t\t\t.then(() => {\r\n\t\t\t\ttoast.success(\"Verification email resent - please check your inbox.\");\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(error));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tagent.Account.verifyEmail(token, email)\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetStatus(Status.Success);\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tsetStatus(Status.Failed);\r\n\t\t\t});\r\n\t}, [Status.Failed, Status.Success, email, token]);\r\n\r\n\tfunction getBody() {\r\n\t\tswitch (status) {\r\n\t\t\tcase Status.Verifying:\r\n\t\t\t\treturn <p>Verifying...</p>;\r\n\t\t\tcase Status.Failed:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Verification failed. You can try resending the verification link to your email.</p>\r\n\t\t\t\t\t\t<Button primary onClick={handleConfirmEmailResend} size=\"huge\" content=\"Resend link\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tcase Status.Success:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>Your email has been verified successfully. You can now log in!</p>\r\n\t\t\t\t\t\t<Button primary size=\"huge\" content=\"Login\" onClick={() => modalStore.openModal(<LoginForm />)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Segment placeholder textAlign=\"center\">\r\n\t\t\t<Header icon>\r\n\t\t\t\t{\" \"}\r\n\t\t\t\t<Icon name=\"envelope\">Email verification</Icon>\r\n\t\t\t</Header>\r\n\t\t\t<Segment.Inline>{getBody()}</Segment.Inline>\r\n\t\t</Segment>\r\n\t);\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/activities/forms/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TestErrors from \"../../features/errors/TestErrors\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/users/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport RegisterSuccess from \"../../features/users/RegisterSuccess\";\r\nimport ConfirmEmail from \"../../features/users/ConfirmEmail\";\r\n\r\nfunction App() {\r\n\tconst location = useLocation();\r\n\tconst { commonStore, userStore } = useStore();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (commonStore.token) {\r\n\t\t\tuserStore.getUser().finally(() => commonStore.setAppLoaded());\r\n\t\t} else {\r\n\t\t\t// temp to allow local testing without fb https restrictions\r\n\t\t\tif (window.FB) {\r\n\t\t\t\tuserStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\r\n\t\t\t} else {\r\n\t\t\t\tcommonStore.setAppLoaded();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [userStore, commonStore]);\r\n\r\n\tif (!commonStore.appLoaded) return <LoadingComponent content=\"Loading app...\" />;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ToastContainer position=\"bottom-right\" hideProgressBar></ToastContainer>\r\n\t\t\t<ModalContainer />\r\n\t\t\t<Route exact path=\"/\" component={HomePage} />\r\n\t\t\t<Route\r\n\t\t\t\tpath={\"/(.+)\"}\r\n\t\t\t\trender={() => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<NavBar />\r\n\t\t\t\t\t\t<Container style={{ marginTop: \"8em\" }}>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\r\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\r\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\r\n\t\t\t\t\t\t\t\t<PrivateRoute key={location.key} path={[\"/createActivity\", \"/manage/:id\"]} component={ActivityForm} />\r\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/errors\" component={TestErrors} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/server-error\" component={ServerError} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/account/registerSuccess\" component={RegisterSuccess} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/account/verifyEmail\" component={ConfirmEmail} />\r\n\r\n\t\t\t\t\t\t\t\t{/* default route if undefined route entered */}\r\n\t\t\t\t\t\t\t\t<Route component={NotFound} />\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n\tconst { pathname } = useLocation();\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, [pathname]);\r\n\r\n\treturn null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n\t// provide context to the application\n\t<StoreContext.Provider value={store}>\n\t\t<Router history={history}>\n\t\t\t<ScrollToTop />\n\t\t\t<App />\n\t\t</Router>\n\t</StoreContext.Provider>,\n\tdocument.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}