{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/common/enums/Filters.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/users/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/forms/CommonTextInput.tsx","features/users/forms/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/forms/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/forms/CommonTextArea.tsx","app/common/forms/DropdownInput.tsx","app/common/enums/categories.ts","app/common/forms/DateInput.tsx","features/activities/forms/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/users/profiles/ActivityCard.tsx","features/users/profiles/ProfileActivities.tsx","features/users/forms/ProfileEditForm.tsx","features/users/profiles/ProfileDetails.tsx","features/users/profiles/ProfileFollowings.tsx","app/common/uploads/PhotoWidgetCropper.tsx","app/common/uploads/PhotoWidgetDropzone.tsx","app/common/uploads/PhotoUploadWidget.tsx","features/users/profiles/ProfilePhotos.tsx","features/users/profiles/ProfileContent.tsx","features/users/profiles/FollowButton.tsx","features/users/profiles/ProfileHeader.tsx","features/users/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","Filters","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","fbLogin","accessToken","register","Profiles","getProfile","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowings","updateProfile","profile","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","city","description","date","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","all","setPredicate","value","resetPredicate","forEach","startDate","isGoing","isHost","console","loadActivities","setLoadingInitial","axiosParams","result","setActivity","setPagination","log","setPagingParams","loadActivity","getActivity","runInAction","userStore","attendees","some","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","u","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","URLSearchParams","toString","toISOString","ProfileStore","loadingProfile","loadingPhoto","loadingFollowings","loadingActivities","uploading","followings","activeTab","setActiveTab","tab","loadProfile","photo","photos","isMain","setImage","p","updateFollowing","shouldFollow","activityStore","followingsCount","loadFollowings","setDisplayName","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","getFacebookLoginStatus","window","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","logout","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","e","on","comment","createdAt","split","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","ProfileCard","bio","Card","Content","Description","length","substring","extra","Icon","iconStyleFollowing","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","ActivityListItem","Segment","Group","Label","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","CommonTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","textAlign","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","CommonTextArea","rows","DropdownInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categories","DateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","preventDefault","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","ActivityCard","objectFit","Meta","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","setEditMode","isCurrentUser","editProfileMode","setEditProfileMode","PhotoWidgetCropper","setCropper","preview","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dropzoneStyle","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","disable","addPhotoMode","setAddPhotoMode","target","setTarget","animated","event","currentTarget","handleSetMainPhoto","visible","hidden","handleDeletePhoto","ProfileDetails","menuPosition","Reveal","handleFollow","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ProfilePage","ActivityForm","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.908b7095.chunk.js","sourcesContent":["export interface Pagination {\r\n\tcurrentPage: number;\r\n\titemsPerPage: number;\r\n\ttotalItems: number;\r\n\ttotalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n\tdata: T;\r\n\tpagination: Pagination;\r\n\r\n\tconstructor(data: T, pagination: Pagination) {\r\n\t\tthis.data = data;\r\n\t\tthis.pagination = pagination;\r\n\t}\r\n}\r\n\r\nexport class PagingParams {\r\n\tpageNumber;\r\n\tpageSize;\r\n\r\n\tconstructor(pageNumber = 1, pageSize = 2) {\r\n\t\tthis.pageNumber = pageNumber;\r\n\t\tthis.pageSize = pageSize;\r\n\t}\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/Activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n\treturn new Promise((resolve) => {\r\n\t\tsetTimeout(resolve, delay);\r\n\t});\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n\tconst token = store.commonStore.token;\r\n\tif (token) {\r\n\t\tconfig.headers!.Authorization = `Bearer ${token}`;\r\n\t}\r\n\treturn config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n\tasync (response) => {\r\n\t\tif (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n\r\n\t\tconst pagination = response.headers[\"pagination\"];\r\n\t\tif (pagination) {\r\n\t\t\tresponse.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n\t\t\treturn response as AxiosResponse<PaginatedResult<any>>;\r\n\t\t} else {\r\n\t\t\treturn response;\r\n\t\t}\r\n\t},\r\n\t(error: AxiosError) => {\r\n\t\tconst { data, status, config } = error.response!;\r\n\r\n\t\tswitch (status) {\r\n\t\t\tcase 400:\r\n\t\t\t\tif (typeof data === \"string\") {\r\n\t\t\t\t\ttoast.error(data);\r\n\t\t\t\t}\r\n\t\t\t\t// handle case - bad guid\r\n\t\t\t\tif (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n\t\t\t\t\thistory.push(\"/not-found\");\r\n\r\n\t\t\t\t\t// handle validation cases by collecting all thrown validation errors and return then in an array\r\n\t\t\t\t} else if (data.errors) {\r\n\t\t\t\t\tconst modalStateErrors = [];\r\n\r\n\t\t\t\t\tfor (const key in data.errors) {\r\n\t\t\t\t\t\tif (data.errors[key]) {\r\n\t\t\t\t\t\t\tmodalStateErrors.push(data.errors[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow modalStateErrors.flat();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 401:\r\n\t\t\t\ttoast.error(\"unauthorised\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 404:\r\n\t\t\t\thistory.push(\"/not-found\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 500:\r\n\t\t\t\tstore.commonStore.setServerError(data);\r\n\t\t\t\thistory.push(\"/server-error\");\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n\tget: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n\tpost: <T>(url: string, body: Object) => axios.post<T>(url, body).then(responseBody),\r\n\tput: <T>(url: string, body: Object) => axios.put<T>(url, body).then(responseBody),\r\n\tdel: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n\tlist: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>(\"/activities\", { params }).then(responseBody),\r\n\tdetails: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n\tcreate: (activity: ActivityFormValues) => requests.post<void>(\"/activities/\", activity),\r\n\tupdate: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n\tdelete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n\tattend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n\tcurrent: () => requests.get<User>(\"/account\"),\r\n\tlogin: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n\tfbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken${accessToken}`, {}),\r\n\tregister: (user: UserFormValues) => requests.post<User>(\"/account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n\tgetProfile: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n\tuploadPhoto: (file: Blob) => {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"File\", file);\r\n\t\treturn axios.post<Photo>(\"photos\", formData, {\r\n\t\t\theaders: { \"Content-type\": \"multipart/form-data\" },\r\n\t\t});\r\n\t},\r\n\tsetMainPhoto: (id: string) => {\r\n\t\trequests.post(`/photos/${id}/setMain`, {});\r\n\t},\r\n\tdeletePhoto: (id: string) => {\r\n\t\trequests.del(`/photos/${id}`);\r\n\t},\r\n\tupdateFollowings: (username: string) => {\r\n\t\trequests.post(`/follow/${username}`, {});\r\n\t},\r\n\tupdateProfile: (profile: Partial<Profile>) => {\r\n\t\trequests.put(`/profiles`, profile);\r\n\t},\r\n\tlistFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n\tlistActivities: (username: string, predicate: string) => requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\r\n};\r\n\r\nconst agent = { Activities, Account, Profiles };\r\n\r\nexport default agent;\r\n","export enum Filters {\r\n\tisHost = \"isHost\",\r\n\tisGoing = \"isGoing\",\r\n\tall = \"all\",\r\n\tstartDate = \"startDate\",\r\n}\r\n","import { Profile } from \"./Profile\";\r\n\r\nexport interface Activity {\r\n\tid: string;\r\n\ttitle: string;\r\n\tdate: Date | null;\r\n\tdescription: string;\r\n\tcategory: string;\r\n\tcity: string;\r\n\tvenue: string;\r\n\thostUsername: string;\r\n\tisCancelled: boolean;\r\n\tisGoing: boolean;\r\n\tisHost: boolean;\r\n\thost?: Profile;\r\n\tattendees?: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n\tconstructor(init?: ActivityFormValues) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n\r\nexport class ActivityFormValues {\r\n\tid?: string = undefined;\r\n\ttitle: string = \"\";\r\n\tcategory: string = \"\";\r\n\tcity: string = \"\";\r\n\tdescription: string = \"\";\r\n\tdate: Date | null = null;\r\n\tvenue: string = \"\";\r\n\r\n\tconstructor(activity?: ActivityFormValues) {\r\n\t\tif (activity) {\r\n\t\t\tthis.id = activity?.id;\r\n\t\t\tthis.title = activity.title;\r\n\t\t\tthis.category = activity.category;\r\n\t\t\tthis.city = activity.city;\r\n\t\t\tthis.description = activity.description;\r\n\t\t\tthis.date = activity.date;\r\n\t\t\tthis.venue = activity.venue;\r\n\t\t}\r\n\t}\r\n}\r\n","import { User } from \"./User\";\r\n\r\nexport interface UserActivity {\r\n\tid: string;\r\n\ttitle: string;\r\n\tdate: Date;\r\n\tcategory: string;\r\n}\r\n\r\nexport interface Profile {\r\n\tusername: string;\r\n\tdisplayName: string;\r\n\timage?: string;\r\n\tbio?: string;\r\n\tfollowersCount: number;\r\n\tfollowingsCount: number;\r\n\tfollowing: boolean;\r\n\tphotos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n\tconstructor(user: User) {\r\n\t\tthis.username = user.username;\r\n\t\tthis.displayName = user.displayName;\r\n\t\tthis.image = user.image;\r\n\t}\r\n}\r\n\r\nexport interface Photo {\r\n\tid: string;\r\n\turl: string;\r\n\tisMain: boolean;\r\n}\r\n","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Filters } from \"../common/enums/Filters\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n\tactivityRegistry = new Map<string, Activity>();\r\n\tselectedActivity: Activity | undefined = undefined;\r\n\teditMode = false;\r\n\tloading = false;\r\n\tloadingInitial = false;\r\n\tpagination: Pagination | null = null;\r\n\tpagingParams = new PagingParams();\r\n\tpredicate = new Map().set(Filters.all, true);\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\r\n\t\treaction(\r\n\t\t\t() => this.predicate.keys(),\r\n\t\t\t() => {\r\n\t\t\t\t// reset pagination to first page of result after applying new filter\r\n\t\t\t\tthis.pagingParams = new PagingParams();\r\n\t\t\t\tthis.activityRegistry.clear();\r\n\t\t\t\tthis.loadActivities();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t// computed properties\r\n\tget activitiesByDate() {\r\n\t\treturn Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime());\r\n\t}\r\n\r\n\tget groupedActivities() {\r\n\t\treturn Object.entries(\r\n\t\t\tthis.activitiesByDate.reduce((activities, activity) => {\r\n\t\t\t\tconst date = format(activity.date!, \"dd MMM yyyy\");\r\n\t\t\t\tactivities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n\t\t\t\treturn activities;\r\n\t\t\t}, {} as { [key: string]: Activity[] })\r\n\t\t);\r\n\t}\r\n\r\n\tget axiosParams() {\r\n\t\tconst params = new URLSearchParams();\r\n\t\tparams.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n\t\tparams.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n\r\n\t\tthis.predicate.forEach((value, key) => {\r\n\t\t\tif (key === Filters.startDate) {\r\n\t\t\t\tparams.append(key, (value as Date).toISOString());\r\n\t\t\t} else {\r\n\t\t\t\tparams.append(key, value);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\tsetPredicate = (predicate: string, value: string | Date) => {\r\n\t\tconst resetPredicate = () => {\r\n\t\t\tthis.predicate.forEach((value, key) => {\r\n\t\t\t\tif (key !== Filters.startDate) this.predicate.delete(key);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tswitch (predicate) {\r\n\t\t\tcase Filters.all:\r\n\t\t\t\tdebugger;\r\n\t\t\t\tresetPredicate();\r\n\t\t\t\tthis.predicate.set(Filters.all, value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Filters.isGoing:\r\n\t\t\t\tresetPredicate();\r\n\t\t\t\tthis.predicate.set(Filters.isGoing, value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Filters.isHost:\r\n\t\t\t\tresetPredicate();\r\n\t\t\t\tthis.predicate.set(Filters.isHost, value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase Filters.startDate:\r\n\t\t\t\t// we must first delete previous date to trigger change reaction\r\n\t\t\t\tthis.predicate.delete(Filters.startDate);\r\n\t\t\t\tthis.predicate.set(Filters.startDate, value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error(\"Predicate key unknown!\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tloadActivities = async () => {\r\n\t\tthis.setLoadingInitial(true);\r\n\t\ttry {\r\n\t\t\tconst result = await agent.Activities.list(this.axiosParams);\r\n\t\t\tresult.data.forEach((activity) => {\r\n\t\t\t\tthis.setActivity(activity);\r\n\t\t\t});\r\n\r\n\t\t\tthis.setPagination(result.pagination);\r\n\t\t\tthis.setLoadingInitial(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tthis.setLoadingInitial(false);\r\n\t\t}\r\n\t};\r\n\r\n\tsetPagination = (pagination: Pagination) => {\r\n\t\tthis.pagination = pagination;\r\n\t};\r\n\r\n\tsetPagingParams = (pagingParams: PagingParams) => {\r\n\t\tthis.pagingParams = pagingParams;\r\n\t};\r\n\r\n\tloadActivity = async (id: string) => {\r\n\t\tlet activity = this.getActivity(id);\r\n\r\n\t\tif (activity) {\r\n\t\t\tthis.selectedActivity = activity;\r\n\t\t\treturn activity;\r\n\t\t} else {\r\n\t\t\tthis.loadingInitial = true;\r\n\t\t\ttry {\r\n\t\t\t\tactivity = await agent.Activities.details(id);\r\n\t\t\t\tthis.setActivity(activity);\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tthis.selectedActivity = activity;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setLoadingInitial(false);\r\n\t\t\t\treturn activity;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthis.setLoadingInitial(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tprivate getActivity = (id: string) => {\r\n\t\treturn this.activityRegistry.get(id);\r\n\t};\r\n\r\n\tprivate setActivity = (activity: Activity) => {\r\n\t\tconst user = store.userStore.user;\r\n\r\n\t\tif (user) {\r\n\t\t\tactivity.isGoing = activity.attendees!.some((a) => a.username === user.username);\r\n\t\t\tactivity.isHost = activity.hostUsername === user.username;\r\n\t\t\tactivity.host = activity.attendees?.find((x) => x.username === activity.hostUsername);\r\n\t\t}\r\n\r\n\t\tactivity.date = new Date(activity.date!);\r\n\t\tthis.activityRegistry.set(activity.id, activity);\r\n\t};\r\n\r\n\t// this method was implemented to avoid the warning about strict mode (see runInAction in documentation)\r\n\tsetLoadingInitial = (state: boolean) => {\r\n\t\tthis.loadingInitial = state;\r\n\t};\r\n\r\n\tcreateActivity = async (activity: ActivityFormValues) => {\r\n\t\tconst user = store.userStore.user;\r\n\t\tconst attendee = new Profile(user!);\r\n\t\tconst newActivity = new Activity(activity);\r\n\t\tnewActivity.hostUsername = user!.username;\r\n\t\tnewActivity.attendees = [attendee];\r\n\t\tthis.setActivity(newActivity);\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.create(activity);\r\n\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.selectedActivity = new Activity();\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tupdateActivity = async (activity: ActivityFormValues) => {\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.update(activity);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (activity.id) {\r\n\t\t\t\t\tlet updatedActivity = { ...this.getActivity(activity.id), ...activity };\r\n\t\t\t\t\tthis.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n\t\t\t\t\tthis.selectedActivity = updatedActivity as Activity;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tdeleteActivity = async (id: string) => {\r\n\t\tthis.loading = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.delete(id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.activityRegistry.delete(id);\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tupdateAttendance = async () => {\r\n\t\tconst user = store.userStore.user;\r\n\t\tthis.loading = true;\r\n\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.attend(this.selectedActivity!.id);\r\n\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.selectedActivity?.isGoing) {\r\n\t\t\t\t\tthis.selectedActivity.attendees = this.selectedActivity.attendees?.filter((u) => u.username !== user?.username);\r\n\t\t\t\t\tthis.selectedActivity.isGoing = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst attendee = new Profile(user!);\r\n\t\t\t\t\tthis.selectedActivity?.attendees?.push(attendee);\r\n\t\t\t\t\tthis.selectedActivity!.isGoing = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t} finally {\r\n\t\t\trunInAction(() => (this.loading = false));\r\n\t\t}\r\n\t};\r\n\r\n\tcancelActivityToggle = async () => {\r\n\t\tthis.loading = true;\r\n\r\n\t\ttry {\r\n\t\t\tawait agent.Activities.attend(this.selectedActivity!.id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n\t\t\t\tthis.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t} finally {\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t};\r\n\r\n\tclearSelectedActivity = () => {\r\n\t\tthis.selectedActivity = undefined;\r\n\t};\r\n\r\n\tupdateAttendeeFollowing = (username: string) => {\r\n\t\tthis.activityRegistry.forEach((activity) => {\r\n\t\t\tactivity.attendees!.forEach((attendee) => {\r\n\t\t\t\tif (attendee.username === username) {\r\n\t\t\t\t\tattendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n\t\t\t\t\tattendee.following = !attendee.following;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n\tprofile: Profile | null = null;\r\n\tloadingProfile = false;\r\n\tloadingPhoto = false;\r\n\tloadingFollowings = false;\r\n\tloadingActivities = false;\r\n\tuploading = false;\r\n\tfollowings: Profile[] = [];\r\n\tactivities: UserActivity[] = [];\r\n\tactiveTab = 0;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\r\n\t\treaction(\r\n\t\t\t() => this.activeTab,\r\n\t\t\t(activeTab) => {\r\n\t\t\t\tif (activeTab === 3 || activeTab === 4) {\r\n\t\t\t\t\tconst predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n\t\t\t\t\tthis.loadFollowings(predicate);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.followings = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (activeTab === 2) {\r\n\t\t\t\t\tthis.loadActivities(this.profile!.username, \"future\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsetActiveTab = (tab: any) => {\r\n\t\tthis.activeTab = tab;\r\n\t};\r\n\r\n\tget isCurrentUser() {\r\n\t\tif (store.userStore.user && this.profile) {\r\n\t\t\treturn store.userStore.user.username === this.profile.username;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tloadProfile = async (username: string) => {\r\n\t\tthis.loadingProfile = true;\r\n\t\ttry {\r\n\t\t\tconst profile = await agent.Profiles.getProfile(username);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.profile = profile;\r\n\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loadingProfile = false));\r\n\t\t}\r\n\t};\r\n\r\n\tuploadPhoto = async (file: Blob) => {\r\n\t\tthis.uploading = true;\r\n\t\ttry {\r\n\t\t\tconst response = await agent.Profiles.uploadPhoto(file);\r\n\t\t\tconst photo = response.data;\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.profile) {\r\n\t\t\t\t\tthis.profile.photos?.push(photo);\r\n\t\t\t\t\tif (photo.isMain && store.userStore.user) {\r\n\t\t\t\t\t\tstore.userStore.setImage(photo.url);\r\n\t\t\t\t\t\tthis.profile.image = photo.url;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.uploading = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.uploading = false));\r\n\t\t}\r\n\t};\r\n\r\n\tsetMainPhoto = async (photo: Photo) => {\r\n\t\tthis.loadingPhoto = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.setMainPhoto(photo.id); // there was an await here\r\n\t\t\tstore.userStore.setImage(photo.id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\t// reset current main photo\r\n\t\t\t\tif (this.profile && this.profile.photos) {\r\n\t\t\t\t\tthis.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n\t\t\t\t\tthis.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n\t\t\t\t\tthis.profile.image = photo.url;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t} finally {\r\n\t\t\trunInAction(() => (this.loadingPhoto = false));\r\n\t\t}\r\n\t};\r\n\r\n\tdeletePhoto = async (photo: Photo) => {\r\n\t\tthis.loadingPhoto = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.deletePhoto(photo.id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.profile && this.profile.photos) {\r\n\t\t\t\t\tthis.profile.photos = this.profile.photos.filter((p) => p.id !== photo.id);\r\n\t\t\t\t\tthis.loadingPhoto = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loadingPhoto = false));\r\n\t\t}\r\n\t};\r\n\r\n\tupdateFollowing = async (username: string, shouldFollow: boolean) => {\r\n\t\tthis.loadingProfile = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.updateFollowings(username);\r\n\t\t\tstore.activityStore.updateAttendeeFollowing(username);\r\n\r\n\t\t\trunInAction(() => {\r\n\t\t\t\t// check if updating for current or other user\r\n\r\n\t\t\t\t// if updating for other user,\r\n\t\t\t\tif (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username !== username) {\r\n\t\t\t\t\tshouldFollow ? this.profile.followersCount++ : this.profile.followersCount--;\r\n\t\t\t\t\tthis.profile.following = !this.profile.following;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.profile && this.profile.username === store.userStore.user?.username) {\r\n\t\t\t\t\tshouldFollow ? this.profile.followingsCount++ : this.profile.followingsCount--;\r\n\t\t\t\t}\r\n\t\t\t\tthis.followings.forEach((profile) => {\r\n\t\t\t\t\tif (profile.username === username) {\r\n\t\t\t\t\t\tprofile.following ? profile.followersCount-- : profile.followersCount++;\r\n\t\t\t\t\t\tprofile.following = !profile.following;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loadingProfile = false));\r\n\t\t}\r\n\t};\r\n\r\n\tloadFollowings = async (predicate: string) => {\r\n\t\tthis.loadingFollowings = true;\r\n\t\ttry {\r\n\t\t\tconst followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.followings = followings;\r\n\t\t\t\tthis.loadingFollowings = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\trunInAction(() => (this.loadingFollowings = false));\r\n\t\t}\r\n\t};\r\n\r\n\tloadActivities = async (username: string, predicate?: string) => {\r\n\t\tthis.loadingActivities = true;\r\n\t\ttry {\r\n\t\t\tconst activities = await agent.Profiles.listActivities(username, predicate!);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.activities = activities;\r\n\t\t\t\tthis.loadingActivities = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\trunInAction(() => (this.loadingActivities = false));\r\n\t\t}\r\n\t};\r\n\r\n\tupdateProfile = async (profile: Partial<Profile>) => {\r\n\t\tthis.loadingProfile = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.updateProfile(profile);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n\t\t\t\t\tstore.userStore.setDisplayName(profile.displayName);\r\n\t\t\t\t}\r\n\t\t\t\tthis.profile = { ...this.profile, ...(profile as Profile) };\r\n\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loadingProfile = false));\r\n\t\t}\r\n\t};\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n\tuser: User | null = null;\r\n\tfbAccessToken: string | null = null;\r\n\tfbLoading = false;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tget isLoggedIn() {\r\n\t\treturn !!this.user;\r\n\t}\r\n\r\n\tlogin = async (creds: UserFormValues) => {\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.login(creds);\r\n\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t\thistory.push(\"/activities\");\r\n\t\t\tstore.modalStore.closeModal();\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\t// set to async to make sure we return a Promise\r\n\tgetFacebookLoginStatus = async () => {\r\n\t\twindow.FB.getLoginStatus((response) => {\r\n\t\t\tif (response.status === \"connected\") {\r\n\t\t\t\tthis.fbAccessToken = response.authResponse.accessToken;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tfacebookLogin = async () => {\r\n\t\tthis.fbLoading = true;\r\n\t\tconst apiLogin = (accessToken: string) => {\r\n\t\t\tagent.Account.fbLogin(accessToken)\r\n\t\t\t\t.then((user) => {\r\n\t\t\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\t\t\trunInAction(() => {\r\n\t\t\t\t\t\tthis.user = user;\r\n\t\t\t\t\t\tthis.fbLoading = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t\thistory.push(\"/activities\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\trunInAction(() => (this.fbLoading = false));\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tif (this.fbAccessToken != null) {\r\n\t\t\tapiLogin(this.fbAccessToken);\r\n\t\t} else {\r\n\t\t\twindow.FB.login(\r\n\t\t\t\t(response) => {\r\n\t\t\t\t\tapiLogin(response.authResponse.accessToken);\r\n\t\t\t\t},\r\n\t\t\t\t{ scope: \"public_profile,email\" }\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tlogout = () => {\r\n\t\tstore.commonStore.setToken(null);\r\n\t\twindow.localStorage.removeItem(\"jwt\");\r\n\t\tthis.user = null;\r\n\t\thistory.push(\"/\");\r\n\t};\r\n\r\n\tregister = async (creds: UserFormValues) => {\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.register(creds);\r\n\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t\thistory.push(\"/activities\");\r\n\t\t\tstore.modalStore.closeModal();\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\tgetUser = async () => {\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.current();\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tsetImage = (image: string) => {\r\n\t\tif (this.user) this.user.image = image;\r\n\t};\r\n\r\n\tsetDisplayName = (name: string) => {\r\n\t\tif (this.user) this.user.displayName = name;\r\n\t};\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n\tactivityStore: ActivityStore;\r\n\tcommonStore: CommonStore;\r\n\tuserStore: UserStore;\r\n\tmodalStore: ModalStore;\r\n\tprofileStore: ProfileStore;\r\n\tcommentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n\tactivityStore: new ActivityStore(),\r\n\tcommonStore: new CommonStore(),\r\n\tuserStore: new UserStore(),\r\n\tmodalStore: new ModalStore(),\r\n\tprofileStore: new ProfileStore(),\r\n\tcommentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n\treturn useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\nexport default class CommonStore {\r\n\terror: ServerError | null = null;\r\n\ttoken: string | null = window.localStorage.getItem(\"jwt\");\r\n\tappLoaded = false;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\r\n\t\treaction(\r\n\t\t\t() => this.token,\r\n\t\t\t(token) => {\r\n\t\t\t\tif (token) {\r\n\t\t\t\t\twindow.localStorage.setItem(\"jwt\", token);\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.localStorage.removeItem(\"jwt\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsetServerError = (error: ServerError) => {\r\n\t\tthis.error = error;\r\n\t};\r\n\r\n\tsetToken = (token: string | null) => {\r\n\t\tthis.token = token;\r\n\t};\r\n\r\n\tsetAppLoaded = () => {\r\n\t\tthis.appLoaded = true;\r\n\t};\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n\topen: boolean;\r\n\tbody: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n\tmodal: Modal = { open: false, body: null };\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\topenModal = (content: JSX.Element | null) => {\r\n\t\tthis.modal.open = true;\r\n\t\tthis.modal.body = content;\r\n\t};\r\n\r\n\tcloseModal = () => {\r\n\t\tthis.modal.open = false;\r\n\t\tthis.modal.body = null;\r\n\t};\r\n}\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n\tcomments: ChatComment[] = [];\r\n\thubConnection: HubConnection | null = null;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tcreateHubConnection = (activityId: string) => {\r\n\t\tif (store.activityStore.selectedActivity) {\r\n\t\t\tthis.hubConnection = new HubConnectionBuilder()\r\n\t\t\t\t.withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=${activityId}`, {\r\n\t\t\t\t\taccessTokenFactory: () => store.userStore.user?.token!,\r\n\t\t\t\t})\r\n\t\t\t\t.withAutomaticReconnect()\r\n\t\t\t\t.configureLogging(LogLevel.Information)\r\n\t\t\t\t.build();\r\n\r\n\t\t\tthis.hubConnection.start().catch((e) => console.log(\"Error creating chat hub connection: \", e));\r\n\r\n\t\t\t// receive all comments to selected activity\r\n\t\t\tthis.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tcomments.forEach((comment) => {\r\n\t\t\t\t\t\tcomment.createdAt = new Date(comment.createdAt.toString().split(\"+\")[0] + \"Z\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.comments = comments;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tcomment.createdAt = new Date(comment.createdAt);\r\n\t\t\t\t\tthis.comments.unshift(comment);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tstopHubConnection = () => {\r\n\t\tthis.hubConnection?.stop().catch((e) => console.log(\"Error stopping hub connection: \", e));\r\n\t};\r\n\r\n\tclearComments = () => {\r\n\t\tthis.comments = [];\r\n\t\tthis.stopHubConnection();\r\n\t};\r\n\r\n\taddComment = async (values: any) => {\r\n\t\tvalues.activityId = store.activityStore.selectedActivity?.id;\r\n\r\n\t\ttry {\r\n\t\t\tawait this.hubConnection?.invoke(\"SendComment\", values);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n\tconst {\r\n\t\tuserStore: { user, logout },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<Menu inverted fixed=\"top\">\r\n\t\t\t<Container>\r\n\t\t\t\t<Menu.Item as={NavLink} exact to={\"/\"} header>\r\n\t\t\t\t\t<img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }} />\r\n\t\t\t\t\tReactivities\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item as={NavLink} to={\"/activities\"} name=\"Activities\" />\r\n\t\t\t\t<Menu.Item as={NavLink} to={\"/errors\"} name=\"Errors\" />\r\n\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t<Button as={NavLink} to={\"/createActivity\"} positive content=\"Create Activity\" />\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item position=\"right\">\r\n\t\t\t\t\t<Image src={user?.image || \"/assets/user.png\"} avatar spaced=\"right\" />\r\n\t\t\t\t\t<Dropdown pointing=\"top left\" text={user?.displayName}>\r\n\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t<Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text=\"Account\" icon=\"user\" />\r\n\t\t\t\t\t\t\t<Dropdown.Item onClick={logout} text=\"Log out\" icon=\"power\" />\r\n\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Container>\r\n\t\t</Menu>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { Filters } from \"../../../app/common/enums/Filters\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n\tconst {\r\n\t\tactivityStore: { predicate, setPredicate },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n\t\t\t\t<Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n\t\t\t\t<Menu.Item content=\"All Activities\" active={predicate.has(Filters.all)} onClick={() => setPredicate(Filters.all, \"true\")} />\r\n\t\t\t\t<Menu.Item content=\"I'm going\" active={predicate.has(Filters.isGoing)} onClick={() => setPredicate(Filters.isGoing, \"true\")} />\r\n\t\t\t\t<Menu.Item content=\"I'm hosting\" active={predicate.has(Filters.isHost)} onClick={() => setPredicate(Filters.isHost, \"true\")} />\r\n\t\t\t</Menu>\r\n\t\t\t<Header />\r\n\t\t\t<Calendar onChange={(date: Date | null) => setPredicate(Filters.startDate, date as Date)} value={predicate.get(Filters.startDate) || new Date()} />\r\n\t\t</>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default function ProfileCard({ profile }: Props) {\r\n\tconst truncate = (bio: string | undefined) => {\r\n\t\treturn bio !== undefined && bio.length > 40 ? bio.substring(0, 37) + \"...\" : bio;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card as={Link} to={`/profiles/${profile.username}`}>\r\n\t\t\t<Image src={profile.image || \"/assets/user.png\"} />\r\n\t\t\t<Card.Content>\r\n\t\t\t\t<Card.Header>{profile.displayName}</Card.Header>\r\n\t\t\t\t<Card.Description> {truncate(profile.bio)}</Card.Description>\r\n\t\t\t</Card.Content>\r\n\t\t\t<Card.Content extra>\r\n\t\t\t\t<Icon name=\"user\" />\r\n\t\t\t\t{profile.followersCount} {profile.followersCount === 1 ? \"Follower\" : \"Followers\"}\r\n\t\t\t</Card.Content>\r\n\t\t\t{/* <FollowButton profile={profile} /> */}\r\n\t\t</Card>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../users/profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n\tattendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n\tconst iconStyleFollowing = {\r\n\t\tborderColor: \"orange\",\r\n\t\tborderWidth: 1,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List horizontal>\r\n\t\t\t{attendees.map((attendee) => (\r\n\t\t\t\t<Popup\r\n\t\t\t\t\thoverable\r\n\t\t\t\t\tkey={attendee.username}\r\n\t\t\t\t\ttrigger={\r\n\t\t\t\t\t\t<List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n\t\t\t\t\t\t\t<Image size=\"mini\" bordered style={attendee.following ? iconStyleFollowing : null} circular src={attendee.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Popup.Content>\r\n\t\t\t\t\t\t<ProfileCard profile={attendee} />\r\n\t\t\t\t\t</Popup.Content>\r\n\t\t\t\t</Popup>\r\n\t\t\t))}\r\n\t\t</List>\r\n\t);\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n\tactivity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\treturn (\r\n\t\t<Segment.Group>\r\n\t\t\t<Segment>\r\n\t\t\t\t{activity.isCancelled && <Label attached=\"top\" color=\"red\" content=\"Cancelled\" />}\r\n\t\t\t\t<Item.Group>\r\n\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t<Item.Image style={{ marginBottom: \"3\" }} size=\"tiny\" circular src={activity.host?.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t<Item.Content>\r\n\t\t\t\t\t\t\t<Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n\t\t\t\t\t\t\t\t{activity.title}\r\n\t\t\t\t\t\t\t</Item.Header>\r\n\t\t\t\t\t\t\t<Item.Description>\r\n\t\t\t\t\t\t\t\tHosted by <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\r\n\t\t\t\t\t\t\t</Item.Description>\r\n\t\t\t\t\t\t\t{activity.isHost && (\r\n\t\t\t\t\t\t\t\t<Label basic color=\"orange\">\r\n\t\t\t\t\t\t\t\t\tYou are hosting this activity\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{!activity.isHost && activity.isGoing && (\r\n\t\t\t\t\t\t\t\t<Label basic color=\"green\">\r\n\t\t\t\t\t\t\t\t\tYou are going to this activity\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t</Item>\r\n\t\t\t\t</Item.Group>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n\t\t\t\t\t<Icon name=\"marker\" /> {activity.venue}\r\n\t\t\t\t</span>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment secondary>\r\n\t\t\t\t<ActivityListItemAttendee attendees={activity.attendees!} />\r\n\t\t\t</Segment>\r\n\t\t\t<Segment clearing>\r\n\t\t\t\t<Item.Description>{activity.description}</Item.Description>\r\n\t\t\t\t<Button as={Link} to={`/activities/${activity.id}`} color=\"teal\" floated=\"right\" content=\"view\" />\r\n\t\t\t</Segment>\r\n\t\t</Segment.Group>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n\tconst { activityStore } = useStore();\r\n\tconst { groupedActivities } = activityStore;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{groupedActivities.map(([group, activities]) => (\r\n\t\t\t\t<Fragment key={group}>\r\n\t\t\t\t\t<Header sub color=\"teal\">\r\n\t\t\t\t\t\t{group}\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t{activities.map((activity) => {\r\n\t\t\t\t\t\treturn <ActivityListItem key={activity.id} activity={activity} />;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Fragment>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Placeholder fluid style={{ marginTop: 25 }}>\r\n\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t<Segment style={{ minHeight: 110 }}>\r\n\t\t\t\t\t\t<Placeholder>\r\n\t\t\t\t\t\t\t<Placeholder.Header image>\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t</Placeholder.Header>\r\n\t\t\t\t\t\t\t<Placeholder.Paragraph>\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t</Placeholder.Paragraph>\r\n\t\t\t\t\t\t</Placeholder>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Placeholder>\r\n\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t</Placeholder>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t\t<Segment secondary style={{ minHeight: 70 }} />\r\n\t\t\t\t\t<Segment clearing>\r\n\t\t\t\t\t\t<Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Segment.Group>\r\n\t\t\t</Placeholder>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n\tconst { activityStore } = useStore();\r\n\tconst { loadActivities, activityRegistry, loadingInitial, setPagingParams, pagination } = activityStore;\r\n\tconst [loadingNext, setLoadingNext] = useState(false);\r\n\r\n\tfunction handleGetNext() {\r\n\t\tsetLoadingNext(true);\r\n\t\tsetPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n\t\tloadActivities().then(() => setLoadingNext(false));\r\n\t}\r\n\r\n\t// fetch activities from API server if not already loaded (if size of registry is 0 or 1 in case one was just created)\r\n\tuseEffect(() => {\r\n\t\tif (activityRegistry.size <= 1) loadActivities();\r\n\t}, [activityRegistry.size, loadActivities]);\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width=\"10\">\r\n\t\t\t\t{loadingInitial && !loadingNext ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ActivityListItemPlaceholder />\r\n\t\t\t\t\t\t<ActivityListItemPlaceholder />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<InfiniteScroll pageStart={0} loadMore={handleGetNext} hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages} initialLoad={false}>\r\n\t\t\t\t\t\t<ActivityList />\r\n\t\t\t\t\t</InfiniteScroll>\r\n\t\t\t\t)}\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width=\"6\">\r\n\t\t\t\t<ActivityFilters />\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t<Loader active={loadingNext}></Loader>\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tname: string;\r\n\tplaceholder: string;\r\n\tlabel?: string;\r\n\ttype?: string;\r\n}\r\n\r\nexport default function CommonTextInput(props: Props) {\r\n\t// bind the name to the field input\r\n\tconst [field, meta] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<input {...field} {...props} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{meta.error}{\" \"}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport CommonTextInput from \"../../../app/common/forms/CommonTextInput\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n\tconst { userStore } = useStore();\r\n\r\n\treturn (\r\n\t\t<Formik initialValues={{ email: \"\", password: \"\", error: null }} onSubmit={(values, { setErrors }) => userStore.login(values).catch((error) => setErrors({ error: \"Invalid email or password.\" }))}>\r\n\t\t\t{({ handleSubmit, isSubmitting, errors }) => (\r\n\t\t\t\t<Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n\t\t\t\t\t<Header as=\"h3\" content=\"Login\" textAlign=\"center\" />\r\n\t\t\t\t\t<CommonTextInput name=\"email\" placeholder=\"Email\" />\r\n\t\t\t\t\t<CommonTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\t\t\t\t\t<ErrorMessage name=\"error\" render={() => <Label style={{ marginBottom: \"10px\" }} color=\"red\" content={errors.error} />} />\r\n\t\t\t\t\t<Button loading={isSubmitting} positive content=\"Login\" type=\"submit\" fluid />\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\terrors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n\treturn (\r\n\t\t<Message error>\r\n\t\t\t{errors && (\r\n\t\t\t\t<Message.List>\r\n\t\t\t\t\t{errors.map((err: any, i: any) => (\r\n\t\t\t\t\t\t<Message.Item key={i}>{err}</Message.Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Message.List>\r\n\t\t\t)}\r\n\t\t</Message>\r\n\t);\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport CommonTextInput from \"../../../app/common/forms/CommonTextInput\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as yup from \"yup\";\r\nimport ValidationErrors from \"../../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n\tconst { userStore } = useStore();\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ displayName: \"\", username: \"\", email: \"\", password: \"\", error: null }}\r\n\t\t\tonSubmit={(values, { setErrors }) => userStore.register(values).catch((error) => setErrors({ error }))}\r\n\t\t\tvalidationSchema={yup.object({\r\n\t\t\t\tdisplayName: yup.string().required(),\r\n\t\t\t\tusername: yup.string().required(),\r\n\t\t\t\temail: yup.string().required().email(),\r\n\t\t\t\tpassword: yup.string().required(),\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n\t\t\t\t<Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n\t\t\t\t\t<Header as=\"h3\" content=\"Registration\" textAlign=\"center\" />\r\n\t\t\t\t\t<CommonTextInput name=\"email\" placeholder=\"Email\" />\r\n\t\t\t\t\t<CommonTextInput name=\"displayName\" placeholder=\"Display name\" />\r\n\t\t\t\t\t<CommonTextInput name=\"username\" placeholder=\"Username\" />\r\n\t\t\t\t\t<CommonTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n\t\t\t\t\t<ErrorMessage name=\"error\" render={() => <ValidationErrors errors={errors.error} />} />\r\n\t\t\t\t\t<Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content=\"Sign Up\" type=\"submit\" fluid />\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Divider, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/forms/LoginForm\";\r\nimport RegisterForm from \"../users/forms/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n\tconst { userStore, modalStore } = useStore();\r\n\treturn (\r\n\t\t<Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n\t\t\t<Container text>\r\n\t\t\t\t<Header as=\"h1\" inverted>\r\n\t\t\t\t\t<Image size=\"large\" src=\"/assets/logo.png\" alt=\"logo\" />\r\n\t\t\t\t\tReactivities\r\n\t\t\t\t</Header>\r\n\t\t\t\t{userStore.isLoggedIn ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Header as=\"h2\" inverted content=\"Welcome back!\" />\r\n\t\t\t\t\t\t<Button as={Link} to=\"/activities\" size=\"huge\" inverted content=\"Go to activities\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Header as=\"h2\" inverted content=\"Welcome to reactivities!\" />\r\n\t\t\t\t\t\t<Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted content=\"Login\" />\r\n\t\t\t\t\t\t<Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted content=\"Register\" />\r\n\t\t\t\t\t\t<Divider horizontal inverted content=\"or\" />\r\n\t\t\t\t\t\t<Button loading={userStore.fbLoading} size=\"huge\" inverted color=\"facebook\" content=\"Login with Facebook\" onClick={userStore.facebookLogin} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</Segment>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tinverted?: boolean; // darken backgroud when loading\r\n\tcontent?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ inverted = true, content = \"Loading...\" }: Props) {\r\n\treturn (\r\n\t\t<Dimmer active inverted={inverted}>\r\n\t\t\t<Loader content={content} />\r\n\t\t</Dimmer>\r\n\t);\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tname: string;\r\n\tplaceholder: string;\r\n\tlabel?: string;\r\n\trows?: number;\r\n}\r\n\r\nexport default function CommonTextArea(props: Props) {\r\n\t// bind the name to the field input\r\n\tconst [field, meta] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<textarea {...field} {...props} rows={props.rows} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{meta.error}{\" \"}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tname: string;\r\n\tplaceholder: string;\r\n\tlabel?: string;\r\n\toptions: any;\r\n}\r\n\r\nexport default function DropdownInput(props: Props) {\r\n\t// bind the name to the field input\r\n\tconst [field, meta, helpers] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<Select clearable options={props.options} value={field.value || null} onChange={(e, d) => helpers.setValue(d.value)} onBlur={() => helpers.setTouched(true)} placeholder={props.placeholder} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{meta.error}{\" \"}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n}\r\n","export const categories = [\r\n\t{ text: \"Drinks\", value: \"drinks\" },\r\n\t{ text: \"Culture\", value: \"culture\" },\r\n\t{ text: \"Film\", value: \"film\" },\r\n\t{ text: \"Food\", value: \"food\" },\r\n\t{ text: \"Music\", value: \"music\" },\r\n\t{ text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function DateInput(props: Partial<ReactDatePickerProps>) {\r\n\t// bind the name to the field input\r\n\tconst [field, meta, helpers] = useField(props.name!);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<DatePicker {...field} {...props} selected={(field.value && new Date(field.value)) || null} onChange={(value) => helpers.setValue(value)} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport * as yup from \"yup\";\r\nimport CommonTextInput from \"../../../app/common/forms/CommonTextInput\";\r\nimport CommonTextArea from \"../../../app/common/forms/CommonTextArea\";\r\nimport DropdownInput from \"../../../app/common/forms/DropdownInput\";\r\nimport { categories } from \"../../../app/common/enums/categories\";\r\nimport DateInput from \"../../../app/common/forms/DateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n\tconst history = useHistory();\r\n\tconst { activityStore } = useStore();\r\n\tconst { createActivity, loadActivity, updateActivity, loadingInitial } = activityStore;\r\n\tconst { id } = useParams<{ id: string }>();\r\n\r\n\tconst [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n\tconst validationSchema = yup.object({\r\n\t\ttitle: yup.string().required(\"Please enter the title!\"),\r\n\t\tcategory: yup.string().required(),\r\n\t\tdescription: yup.string().required(),\r\n\t\tdate: yup.string().required(\"Please enter a valid date!\").nullable(),\r\n\t\tcity: yup.string().required(),\r\n\t\tvenue: yup.string().required(),\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\r\n\t}, [id, loadActivity]); // by adding dependencies we only execute code if any of the dependencies changed\r\n\r\n\tfunction handleFormSubmit(activity: ActivityFormValues) {\r\n\t\tif (!activity.id) {\r\n\t\t\tlet newActivity = { ...activity, id: uuid() };\r\n\t\t\tcreateActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\r\n\t\t} else {\r\n\t\t\tupdateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n\t\t}\r\n\t}\r\n\r\n\tif (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n\treturn (\r\n\t\t<Segment clearing>\r\n\t\t\t<Header content=\"Activity details\" sub color=\"teal\"></Header>\r\n\t\t\t<Formik validationSchema={validationSchema} enableReinitialize initialValues={activity} onSubmit={(values) => handleFormSubmit(values)}>\r\n\t\t\t\t{({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n\t\t\t\t\t<Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"false\">\r\n\t\t\t\t\t\t<CommonTextInput placeholder=\"Title\" name=\"title\" />\r\n\t\t\t\t\t\t<CommonTextArea placeholder=\"Description\" name=\"description\" />\r\n\t\t\t\t\t\t<DropdownInput options={categories} placeholder=\"Select a category\" name=\"category\" />\r\n\t\t\t\t\t\t<DateInput placeholderText=\"Date\" name=\"date\" showTimeSelect timeCaption=\"time\" dateFormat=\"MMMM d, yyyy h:mm aa\" />\r\n\t\t\t\t\t\t<Header content=\"Location details\" sub color=\"teal\" />\r\n\t\t\t\t\t\t<CommonTextInput placeholder=\"City\" name=\"city\" />\r\n\t\t\t\t\t\t<CommonTextInput placeholder=\"Venue\" name=\"venue\" />\r\n\t\t\t\t\t\t<Button disabled={isSubmitting || !dirty || !isValid} loading={isSubmitting} floated=\"right\" positive type=\"submit\" content=\"Submit\" />\r\n\t\t\t\t\t\t<Button as={Link} to={\"/activities\"} loading={isSubmitting} floated=\"right\" type=\"button\" content=\"Cancel\" />\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Segment>\r\n\t);\r\n});\r\n","import { Field, FieldProps, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n\tactivityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n\tconst { commentStore } = useStore();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activityId) {\r\n\t\t\tcommentStore.createHubConnection(activityId);\r\n\t\t}\r\n\r\n\t\t// cleanup all comments and stop hub connection when compoment gets destroyed\r\n\t\treturn () => {\r\n\t\t\tcommentStore.clearComments();\r\n\t\t};\r\n\t}, [commentStore, activityId]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{ border: \"none\" }}>\r\n\t\t\t\t<Header>Chat about this event</Header>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment attached clearing>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tonSubmit={(values, { resetForm }) => commentStore.addComment(values).then(() => resetForm())}\r\n\t\t\t\t\tinitialValues={{ body: \"\" }}\r\n\t\t\t\t\tvalidationSchema={yup.object({ body: yup.string().required() })}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({ isSubmitting, isValid, handleSubmit }) => (\r\n\t\t\t\t\t\t<Form className=\"ui form\">\r\n\t\t\t\t\t\t\t<Field name=\"body\">\r\n\t\t\t\t\t\t\t\t{(props: FieldProps) => (\r\n\t\t\t\t\t\t\t\t\t<div style={{ position: \"relative\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<Loader active={isSubmitting} />\r\n\t\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add a comment (ENTER to submit)\"\r\n\t\t\t\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\t\t\t\t{...props.field}\r\n\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.shiftKey) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prvent starting new line\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisValid && handleSubmit();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t\t<Comment.Group>\r\n\t\t\t\t\t{commentStore.comments.map((comment) => (\r\n\t\t\t\t\t\t<Comment key={comment.id}>\r\n\t\t\t\t\t\t\t<Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t\t<Comment.Content>\r\n\t\t\t\t\t\t\t\t<Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n\t\t\t\t\t\t\t\t\t{comment.displayName}\r\n\t\t\t\t\t\t\t\t</Comment.Author>\r\n\t\t\t\t\t\t\t\t<Comment.Metadata>\r\n\t\t\t\t\t\t\t\t\t<div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n\t\t\t\t\t\t\t\t</Comment.Metadata>\r\n\t\t\t\t\t\t\t\t<Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>{comment.body}</Comment.Text>\r\n\t\t\t\t\t\t\t</Comment.Content>\r\n\t\t\t\t\t\t</Comment>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Comment.Group>\r\n\t\t\t</Segment>\r\n\t\t</>\r\n\t);\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n\tfilter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n\tposition: \"absolute\",\r\n\tbottom: \"5%\",\r\n\tleft: \"5%\",\r\n\twidth: \"100%\",\r\n\theight: \"auto\",\r\n\tcolor: \"white\",\r\n};\r\n\r\ninterface Props {\r\n\tactivity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n\tconst {\r\n\t\tactivityStore: { updateAttendance, loading, cancelActivityToggle },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<Segment.Group>\r\n\t\t\t<Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n\t\t\t\t{activity.isCancelled && <Label style={{ position: \"absolute\", zIndex: \"100\", left: \"-14\", top: \"20\" }} ribbon color=\"red\" content=\"Cancelled\" />}\r\n\t\t\t\t<Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n\t\t\t\t<Segment style={activityImageTextStyle} basic>\r\n\t\t\t\t\t<Item.Group>\r\n\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t<Item.Content>\r\n\t\t\t\t\t\t\t\t<Header size=\"huge\" content={activity.title} style={{ color: \"white\" }} />\r\n\t\t\t\t\t\t\t\t<p>{activity.date != null ? format(activity.date!, \"dd MMM yyyy\") : \"\"}</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tHosted by{\" \"}\r\n\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\r\n\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t</Item.Group>\r\n\t\t\t\t</Segment>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment clearing attached=\"bottom\">\r\n\t\t\t\t{activity.isHost ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button onClick={cancelActivityToggle} color={activity.isCancelled ? \"green\" : \"red\"} floated=\"left\" basic loading={loading}>\r\n\t\t\t\t\t\t\t{activity.isCancelled ? \"Reactivate\" : \"Cancel\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button disabled={activity.isCancelled} as={Link} to={`/manage/${activity.id}`} color=\"orange\" floated=\"right\">\r\n\t\t\t\t\t\t\tManage Event\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : activity.isGoing ? (\r\n\t\t\t\t\t<Button onClick={updateAttendance} loading={loading}>\r\n\t\t\t\t\t\tCancel attendance\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button disabled={activity.isCancelled} onClick={updateAttendance} loading={loading} color=\"teal\">\r\n\t\t\t\t\t\tJoin Activity\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</Segment>\r\n\t\t</Segment.Group>\r\n\t);\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n\tactivity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n\treturn (\r\n\t\t<Segment.Group>\r\n\t\t\t<Segment attached=\"top\">\r\n\t\t\t\t<Grid>\r\n\t\t\t\t\t<Grid.Column width={1}>\r\n\t\t\t\t\t\t<Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={15}>\r\n\t\t\t\t\t\t<p>{activity.description}</p>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment attached>\r\n\t\t\t\t<Grid verticalAlign=\"middle\">\r\n\t\t\t\t\t<Grid.Column width={1}>\r\n\t\t\t\t\t\t<Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={15}>\r\n\t\t\t\t\t\t<span>{activity.date != null ? format(activity.date!, \"dd MMM yyyy h:mm aa\") : \"\"}</span>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment attached>\r\n\t\t\t\t<Grid verticalAlign=\"middle\">\r\n\t\t\t\t\t<Grid.Column width={1}>\r\n\t\t\t\t\t\t<Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={11}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{activity.venue}, {activity.city}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n\t\t</Segment.Group>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n\tactivity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\r\n\tif (!attendees) return null;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Segment textAlign=\"center\" style={{ border: \"none\" }} attached=\"top\" secondary inverted color=\"teal\">\r\n\t\t\t\t{attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n\t\t\t</Segment>\r\n\t\t\t<Segment attached>\r\n\t\t\t\t<List relaxed divided>\r\n\t\t\t\t\t{attendees.map((attendee) => (\r\n\t\t\t\t\t\t<Item style={{ position: \"relative\" }} key={attendee.username}>\r\n\t\t\t\t\t\t\t{attendee.username === host?.username && (\r\n\t\t\t\t\t\t\t\t<Label style={{ position: \"absolute\" }} color=\"orange\" ribbon=\"right\">\r\n\t\t\t\t\t\t\t\t\tHost\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t\t<Item.Content verticalAlign=\"middle\">\r\n\t\t\t\t\t\t\t\t<Item.Header as=\"h3\">\r\n\t\t\t\t\t\t\t\t\t<Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n\t\t\t\t\t\t\t\t</Item.Header>\r\n\t\t\t\t\t\t\t\t{attendee.following && <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</Segment>\r\n\t\t</>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n\tconst { activityStore } = useStore();\r\n\tconst { selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity } = activityStore;\r\n\tconst { id } = useParams<{ id: string }>();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (id) loadActivity(id);\r\n\r\n\t\treturn () => clearSelectedActivity();\r\n\t}, [id, loadActivity, clearSelectedActivity]);\r\n\r\n\tif (loadingInitial || !activity) return <LoadingComponent />; // just to remove the error of undefined on activity\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width=\"10\">\r\n\t\t\t\t<ActivityDetailedHeader activity={activity} />\r\n\t\t\t\t<ActivityDetailedInfo activity={activity} />\r\n\t\t\t\t<ActivityDetailedChat activityId={activity.id} />\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width=\"6\">\r\n\t\t\t\t<ActivityDetailedSidebar activity={activity} />\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n\tconst baseUrl = process.env.REACT_APP_API_URL;\r\n\tconst [errors, setErrors] = useState(null);\r\n\r\n\tfunction handleNotFound() {\r\n\t\taxios.get(baseUrl + \"buggy/not-found\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleBadRequest() {\r\n\t\taxios.get(baseUrl + \"buggy/bad-request\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleServerError() {\r\n\t\taxios.get(baseUrl + \"buggy/server-error\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleUnauthorised() {\r\n\t\taxios.get(baseUrl + \"buggy/unauthorised\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleBadGuid() {\r\n\t\taxios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err.response));\r\n\t}\r\n\r\n\tfunction handleValidationError() {\r\n\t\taxios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header as=\"h1\" content=\"Test Error component\" />\r\n\t\t\t<Segment>\r\n\t\t\t\t<Button.Group widths=\"7\">\r\n\t\t\t\t\t<Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleBadRequest} content=\"Bad Request\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleValidationError} content=\"Validation Error\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleServerError} content=\"Server Error\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleUnauthorised} content=\"Unauthorised\" basic primary />\r\n\t\t\t\t\t<Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n\t\t\t\t</Button.Group>\r\n\t\t\t</Segment>\r\n\t\t\t{errors && <ValidationErrors errors={errors} />}\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n\treturn (\r\n\t\t<Segment placeholder size=\"large\">\r\n\t\t\t<Header icon>\r\n\t\t\t\t<Icon name=\"search\" />\r\n\t\t\t\tOops! I cannot find the item you are looking for!\r\n\t\t\t</Header>\r\n\t\t\t<Segment.Inline>\r\n\t\t\t\t<Button primary as={NavLink} to={\"/activities\"} content=\"Go back\" />\r\n\t\t\t</Segment.Inline>\r\n\t\t</Segment>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n\tconst { commonStore } = useStore();\r\n\r\n\treturn (\r\n\t\t<Segment>\r\n\t\t\t<Header as=\"h1\" content=\"Server Error Occured\" />\r\n\t\t\t<Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n\t\t\t{commonStore.error?.details && (\r\n\t\t\t\t<Segment>\r\n\t\t\t\t\t<Header as=\"h4\" content=\"stack trace\" color=\"teal\" />\r\n\t\t\t\t\t<code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n\t\t\t\t</Segment>\r\n\t\t\t)}\r\n\t\t</Segment>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n\tconst { modalStore } = useStore();\r\n\treturn (\r\n\t\t<Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\r\n\t\t\t<Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n\t\t</Modal>\r\n\t);\r\n});\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../../app/models/Profile\";\r\n\r\ninterface Props {\r\n\tactivity: UserActivity;\r\n}\r\n\r\nexport default function ActivityCard({ activity }: Props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card as={Link} to={`/activities/${activity.id}`} key={activity.id}>\r\n\t\t\t\t<Image src={`/assets/categoryImages/${activity.category}.jpg`} style={{ minHeight: 100, objectFit: \"cover\" }} />\r\n\t\t\t\t<Card.Content>\r\n\t\t\t\t\t<Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n\t\t\t\t\t<Card.Meta textAlign=\"center\">\r\n\t\t\t\t\t\t<div>{format(new Date(activity.date), \"do LLLL\")}</div>\r\n\t\t\t\t\t\t<div>{format(new Date(activity.date), \"h:mm aa\")}</div>\r\n\t\t\t\t\t</Card.Meta>\r\n\t\t\t\t</Card.Content>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { SyntheticEvent, useEffect } from \"react\";\r\nimport { Card, Grid, Header, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityCard from \"./ActivityCard\";\r\n\r\nexport default observer(function ProfileActivities() {\r\n\tconst {\r\n\t\tprofileStore: { loadingActivities, loadActivities, activities, profile },\r\n\t} = useStore();\r\n\r\n\tconst panes = [\r\n\t\t{ menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n\t\t{ menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n\t\t{ menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tloadActivities(profile!.username);\r\n\t}, [loadActivities, profile]);\r\n\r\n\tconst handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n\t\tloadActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tab.Pane loading={loadingActivities}>\r\n\t\t\t\t<Grid>\r\n\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t<Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\tmenu={{ secondary: true, pointing: true }}\r\n\t\t\t\t\t\t\tpanes={panes}\r\n\t\t\t\t\t\t\tonTabChange={(e, data) => {\r\n\t\t\t\t\t\t\t\thandleTabChange(e, data);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Card.Group itemsPerRow={4}>\r\n\t\t\t\t\t\t\t{activities.map((activity) => (\r\n\t\t\t\t\t\t\t\t<ActivityCard key={activity.id} activity={activity} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Tab.Pane>\r\n\t\t</>\r\n\t);\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport CommonTextArea from \"../../../app/common/forms/CommonTextArea\";\r\nimport CommonTextInput from \"../../../app/common/forms/CommonTextInput\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as yup from \"yup\";\r\n\r\ninterface Props {\r\n\tsetEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n\tconst {\r\n\t\tprofileStore: { profile, updateProfile },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n\t\t\tonSubmit={(values) => updateProfile(values).then(() => setEditMode(false))}\r\n\t\t\tvalidationSchema={yup.object({\r\n\t\t\t\tdisplayName: yup.string().required(),\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{({ isSubmitting, isValid, dirty }) => (\r\n\t\t\t\t<Form className=\"ui form\" autoComplete=\"off\">\r\n\t\t\t\t\t<CommonTextInput name=\"displayName\" placeholder={profile?.displayName ?? \"Enter a display name\"} />\r\n\t\t\t\t\t<CommonTextArea name=\"bio\" placeholder={profile?.bio ?? \"Enter a bio\"} />\r\n\t\t\t\t\t<Button loading={isSubmitting} content=\"Save\" positive type=\"submit\" fluid disabled={!isValid || !dirty} />\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Divider, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileEditForm from \"../forms/ProfileEditForm\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n\tconst {\r\n\t\tprofileStore: { isCurrentUser, profile },\r\n\t} = useStore();\r\n\tconst [editProfileMode, setEditProfileMode] = useState(false);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header floated=\"left\" icon=\"user\" content={`About ${profile?.displayName}`} />\r\n\t\t\t\t\t{isCurrentUser && <Button floated=\"right\" basic content={editProfileMode ? \"Cancel\" : \"Edit\"} onClick={() => setEditProfileMode(!editProfileMode)} />}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t{editProfileMode ? (\r\n\t\t\t\t\t\t<ProfileEditForm setEditMode={setEditProfileMode} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div>{profile?.bio}</div>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n\tconst { profileStore } = useStore();\r\n\tconst { profile, followings, activeTab, loadingFollowings } = profileStore;\r\n\r\n\treturn (\r\n\t\t<Tab.Pane loading={loadingFollowings}>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header floated=\"left\" icon=\"user\" content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`} />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Card.Group itemsPerRow={4}>\r\n\t\t\t\t\t\t{followings.map((profile) => (\r\n\t\t\t\t\t\t\t<ProfileCard key={profile.username} profile={profile} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Card.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport Cropper from \"react-cropper\";\r\n\r\ninterface Props {\r\n\tsetCropper: (cropper: Cropper) => void;\r\n\tpreview: string;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ setCropper, preview }: Props) {\r\n\treturn (\r\n\t\t<Cropper\r\n\t\t\tsrc={preview}\r\n\t\t\tstyle={{ height: 200, width: \"100%\" }}\r\n\t\t\t// aspect ratio will enforce square images\r\n\t\t\tinitialAspectRatio={1}\r\n\t\t\taspectRatio={1}\r\n\t\t\tpreview=\".img-preview\"\r\n\t\t\tguides={false}\r\n\t\t\tviewMode={1}\r\n\t\t\tautoCropArea={1}\r\n\t\t\tbackground={false}\r\n\t\t\tonInitialized={(cropper) => setCropper(cropper)}\r\n\t\t/>\r\n\t);\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tsetFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n\tconst dropzoneStyle = {\r\n\t\tborder: \"dashed 3px #eee\",\r\n\t\tborderColor: \"#eee\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpaddingTop: \"30px\",\r\n\t\ttextAlign: \"center\" as \"center\", // mitigating TS warning\r\n\t\theight: 200,\r\n\t};\r\n\r\n\tconst activeDropzoneStyle = {\r\n\t\tborderColor: \"green\",\r\n\t};\r\n\r\n\tconst onDrop = useCallback(\r\n\t\t(acceptedFiles) => {\r\n\t\t\tsetFiles(\r\n\t\t\t\t// get preview of the dropped image\r\n\t\t\t\tacceptedFiles.map((file: any) =>\r\n\t\t\t\t\tObject.assign(file, {\r\n\t\t\t\t\t\tpreview: URL.createObjectURL(file),\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t},\r\n\t\t[setFiles]\r\n\t);\r\n\r\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n\treturn (\r\n\t\t<div {...getRootProps()} style={isDragActive ? { ...dropzoneStyle, ...activeDropzoneStyle } : dropzoneStyle}>\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<Icon name=\"upload\" size=\"huge\" />\r\n\t\t\t<Header content=\"Drop image here\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n\tloading: boolean;\r\n\tuploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n\tconst [files, setFiles] = useState<any>([]);\r\n\tconst [cropper, setCropper] = useState<Cropper>();\r\n\r\n\tfunction onCrop() {\r\n\t\tif (cropper) {\r\n\t\t\tcropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n\t\t}\r\n\t}\r\n\r\n\t// cleanup preview urls\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tfiles.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n\t\t};\r\n\t}, [files]);\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 1 - Add Photo\"></Header>\r\n\t\t\t\t<PhotoWidgetDropzone setFiles={setFiles} />\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={1} />\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 2 - Resize Image\"></Header>\r\n\t\t\t\t{files && files.length > 0 && <PhotoWidgetCropper setCropper={setCropper} preview={files[0].preview} />}\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={1} />\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 3 - Preview and Upload\"></Header>\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"img-preview\" style={{ minHeight: 200, overflow: \"hidden\" }} />\r\n\t\t\t\t\t{files && files.length > 0 && (\r\n\t\t\t\t\t\t<Button.Group widths={2}>\r\n\t\t\t\t\t\t\t<Button icon=\"check\" loading={loading} onClick={onCrop} positive />\r\n\t\t\t\t\t\t\t<Button icon=\"close\" disable={loading ? true : false} onClick={() => setFiles([])} />\r\n\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button, Icon } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../../app/common/uploads/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../../app/models/Profile\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n\tconst { profileStore } = useStore();\r\n\tconst [addPhotoMode, setAddPhotoMode] = useState(false);\r\n\tconst [target, setTarget] = useState(\"\");\r\n\r\n\tfunction handleUploadPhoto(file: Blob) {\r\n\t\tprofileStore.uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n\t}\r\n\r\n\tfunction handleSetMainPhoto(photo: Photo, event: SyntheticEvent<HTMLButtonElement>) {\r\n\t\tsetTarget(event.currentTarget.name);\r\n\t\tprofileStore.setMainPhoto(photo);\r\n\t}\r\n\r\n\tfunction handleDeletePhoto(photo: Photo, event: SyntheticEvent<HTMLButtonElement>) {\r\n\t\tsetTarget(event.currentTarget.name);\r\n\t\tprofileStore.deletePhoto(photo);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Tab.Pane>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n\t\t\t\t\t{profileStore.isCurrentUser && <Button floated=\"right\" basic content={addPhotoMode ? \"Cancel\" : \"Add Photo\"} onClick={() => setAddPhotoMode(!addPhotoMode)} />}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t{addPhotoMode ? (\r\n\t\t\t\t\t\t<PhotoUploadWidget uploadPhoto={handleUploadPhoto} loading={profileStore.uploading} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Card.Group itemsPerRow={5}>\r\n\t\t\t\t\t\t\t{profile.photos?.map((photo) => (\r\n\t\t\t\t\t\t\t\t<Card key={photo.id}>\r\n\t\t\t\t\t\t\t\t\t<Image src={photo.url} />\r\n\t\t\t\t\t\t\t\t\t{profileStore.isCurrentUser && (\r\n\t\t\t\t\t\t\t\t\t\t<Button.Group fluid widths={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* set main button */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated=\"vertical\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleSetMainPhoto(photo, e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"main\" + photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMain}\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={target === \"main\" + photo.id && profileStore.loadingPhoto}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button.Content visible>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"user circle\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button.Content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button.Content hidden content=\"set main\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* delete button */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated=\"vertical\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMain}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleDeletePhoto(photo, e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={target === photo.id && profileStore.loadingPhoto}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button.Content visible>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"trash\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button.Content>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button.Content hidden color=\"red\" content=\"delete\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileDetails from \"./ProfileDetails\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n\tconst { profileStore } = useStore();\r\n\r\n\tconst panes = [\r\n\t\t{ menuItem: \"About\", render: () => <ProfileDetails /> },\r\n\t\t{ menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n\t\t{ menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n\t\t{ menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n\t\t{ menuItem: \"Following\", render: () => <ProfileFollowings /> },\r\n\t];\r\n\treturn (\r\n\t\t<Tab\r\n\t\t\tmenu={{ fluid: true, vertical: true }}\r\n\t\t\tmenuPosition=\"right\"\r\n\t\t\tpanes={panes}\r\n\t\t\tonTabChange={(e, data) => {\r\n\t\t\t\tprofileStore.setActiveTab(data.activeIndex);\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n\tconst { profileStore, userStore } = useStore();\r\n\tconst { updateFollowing, loadingProfile } = profileStore;\r\n\r\n\tfunction handleFollow(e: SyntheticEvent, username: string) {\r\n\t\t// prevent button from opening user profile\r\n\t\te.preventDefault();\r\n\t\tupdateFollowing(username, !profile.following);\r\n\t}\r\n\r\n\t// dont display button if reviewing own profile\r\n\tif (userStore.user?.username === profile.username) return null;\r\n\treturn (\r\n\t\t<Reveal animated=\"move\">\r\n\t\t\t<Reveal.Content visible style={{ width: \"100%\" }}>\r\n\t\t\t\t<Button fluid color=\"teal\" content={profile.following ? \"Following\" : \"Not following\"} />\r\n\t\t\t</Reveal.Content>\r\n\t\t\t<Reveal.Content hidden style={{ width: \"100%\" }}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfluid\r\n\t\t\t\t\tbasic\r\n\t\t\t\t\tloading={loadingProfile}\r\n\t\t\t\t\tonClick={(e) => handleFollow(e, profile.username)}\r\n\t\t\t\t\tcolor={profile.following ? \"red\" : \"green\"}\r\n\t\t\t\t\tcontent={profile.following ? \"Unfollow\" : \"Follow\"}\r\n\t\t\t\t/>\r\n\t\t\t</Reveal.Content>\r\n\t\t</Reveal>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n\treturn (\r\n\t\t<Segment>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={12}>\r\n\t\t\t\t\t<Item.Group>\r\n\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t<Item.Image avatar size=\"small\" src={profile.image || \"/assets/user.png\"} />\r\n\t\t\t\t\t\t\t<Item.Content verticalAlign=\"middle\">\r\n\t\t\t\t\t\t\t\t<Header as=\"h1\" content={profile.displayName} />\r\n\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t</Item.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t\t<Statistic.Group>\r\n\t\t\t\t\t\t<Statistic label=\"Following\" value={profile.followingsCount} />\r\n\t\t\t\t\t\t<Statistic label={profile.followersCount === 1 ? \"Follower\" : \"Followers\"} value={profile.followersCount} />\r\n\t\t\t\t\t</Statistic.Group>\r\n\t\t\t\t\t<Divider></Divider>\r\n\t\t\t\t\t<FollowButton profile={profile} />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Segment>\r\n\t);\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n\tconst { username } = useParams<{ username: string }>();\r\n\tconst { profileStore } = useStore();\r\n\tconst { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadProfile(username);\r\n\t\treturn () => setActiveTab(0);\r\n\t}, [loadProfile, username, setActiveTab]);\r\n\r\n\tif (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t{profile && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ProfileHeader profile={profile} />\r\n\t\t\t\t\t\t<ProfileContent profile={profile} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n\tcomponent: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n\tconst {\r\n\t\tuserStore: { isLoggedIn },\r\n\t} = useStore();\r\n\r\n\treturn <Route {...rest} render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to={\"/\"} />)} />;\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch } from \"react-router\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/forms/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport { useLocation } from \"react-router-dom\";\nimport TestErrors from \"../../features/errors/TestErrors\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/users/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n\tconst location = useLocation();\n\tconst { commonStore, userStore } = useStore();\n\n\tuseEffect(() => {\n\t\tif (commonStore.token) {\n\t\t\tuserStore.getUser().finally(() => commonStore.setAppLoaded());\n\t\t} else {\n\t\t\tuserStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n\t\t}\n\t}, [userStore, commonStore]);\n\n\tif (!commonStore.appLoaded) return <LoadingComponent content=\"Loading app...\" />;\n\treturn (\n\t\t<>\n\t\t\t<ToastContainer position=\"bottom-right\" hideProgressBar></ToastContainer>\n\t\t\t<ModalContainer />\n\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t<Route\n\t\t\t\tpath={\"/(.+)\"}\n\t\t\t\trender={() => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t<Container style={{ marginTop: \"8em\" }}>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\n\t\t\t\t\t\t\t\t<PrivateRoute key={location.key} path={[\"/createActivity\", \"/manage/:id\"]} component={ActivityForm} />\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/errors\" component={TestErrors} />\n\t\t\t\t\t\t\t\t<Route path=\"/server-error\" component={ServerError} />\n\n\t\t\t\t\t\t\t\t{/* default route if undefined route entered */}\n\t\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n\tconst { pathname } = useLocation();\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, [pathname]);\r\n\r\n\treturn null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n\t// provide context to the application\n\t<StoreContext.Provider value={store}>\n\t\t<Router history={history}>\n\t\t\t<ScrollToTop />\n\t\t\t<App />\n\t\t</Router>\n\t</StoreContext.Provider>,\n\tdocument.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}